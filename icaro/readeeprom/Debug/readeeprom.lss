
readeeprom.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000188  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000134  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000188  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  000001f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a64  00000000  00000000  000002a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000728  00000000  00000000  00000d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000048a  00000000  00000000  00001434  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000060  00000000  00000000  000018c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000381  00000000  00000000  00001920  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000120  00000000  00000000  00001ca1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001dc1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 4c 00 	call	0x98	; 0x98 <main>
  78:	0c 94 98 00 	jmp	0x130	; 0x130 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <read>:
    values[0] = eeprom_read_word(0);    
}

void write(uint16_t address, uint16_t value)
{
    eeprom_write_word(address, value);   
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	ec 01       	movw	r28, r24
  86:	80 e0       	ldi	r24, 0x00	; 0
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	0e 94 6f 00 	call	0xde	; 0xde <eeprom_read_word>
  8e:	99 83       	std	Y+1, r25	; 0x01
  90:	88 83       	st	Y, r24
  92:	df 91       	pop	r29
  94:	cf 91       	pop	r28
  96:	08 95       	ret

00000098 <main>:
}

int main(void)
{
  98:	cf 93       	push	r28
  9a:	df 93       	push	r29
  9c:	cd b7       	in	r28, 0x3d	; 61
  9e:	de b7       	in	r29, 0x3e	; 62
  a0:	2c 97       	sbiw	r28, 0x0c	; 12
  a2:	0f b6       	in	r0, 0x3f	; 63
  a4:	f8 94       	cli
  a6:	de bf       	out	0x3e, r29	; 62
  a8:	0f be       	out	0x3f, r0	; 63
  aa:	cd bf       	out	0x3d, r28	; 61
    /* Replace with your application code */
    while (1) 
    {
        int16_t values[6] = {0};
  ac:	0f 2e       	mov	r0, r31
  ae:	fc e0       	ldi	r31, 0x0C	; 12
  b0:	ff 2e       	mov	r15, r31
  b2:	f0 2d       	mov	r31, r0
  b4:	8e 01       	movw	r16, r28
  b6:	0f 5f       	subi	r16, 0xFF	; 255
  b8:	1f 4f       	sbci	r17, 0xFF	; 255
  ba:	f8 01       	movw	r30, r16
  bc:	8f 2d       	mov	r24, r15
  be:	11 92       	st	Z+, r1
  c0:	8a 95       	dec	r24
  c2:	e9 f7       	brne	.-6      	; 0xbe <main+0x26>
        read(values);
  c4:	c8 01       	movw	r24, r16
  c6:	0e 94 40 00 	call	0x80	; 0x80 <read>
    values[0] = eeprom_read_word(0);    
}

void write(uint16_t address, uint16_t value)
{
    eeprom_write_word(address, value);   
  ca:	62 e0       	ldi	r22, 0x02	; 2
  cc:	70 e0       	ldi	r23, 0x00	; 0
  ce:	80 e0       	ldi	r24, 0x00	; 0
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	0e 94 75 00 	call	0xea	; 0xea <eeprom_write_word>
    while (1) 
    {
        int16_t values[6] = {0};
        read(values);
        write(0, 2);
        read(values);
  d6:	c8 01       	movw	r24, r16
  d8:	0e 94 40 00 	call	0x80	; 0x80 <read>
  dc:	ee cf       	rjmp	.-36     	; 0xba <main+0x22>

000000de <eeprom_read_word>:
  de:	a8 e1       	ldi	r26, 0x18	; 24
  e0:	b0 e0       	ldi	r27, 0x00	; 0
  e2:	42 e0       	ldi	r20, 0x02	; 2
  e4:	50 e0       	ldi	r21, 0x00	; 0
  e6:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <eeprom_read_blraw>

000000ea <eeprom_write_word>:
  ea:	0e 94 8a 00 	call	0x114	; 0x114 <eeprom_write_byte>
  ee:	27 2f       	mov	r18, r23
  f0:	0c 94 8b 00 	jmp	0x116	; 0x116 <eeprom_write_r18>

000000f4 <eeprom_read_block>:
  f4:	dc 01       	movw	r26, r24
  f6:	cb 01       	movw	r24, r22

000000f8 <eeprom_read_blraw>:
  f8:	fc 01       	movw	r30, r24
  fa:	f9 99       	sbic	0x1f, 1	; 31
  fc:	fe cf       	rjmp	.-4      	; 0xfa <eeprom_read_blraw+0x2>
  fe:	06 c0       	rjmp	.+12     	; 0x10c <eeprom_read_blraw+0x14>
 100:	f2 bd       	out	0x22, r31	; 34
 102:	e1 bd       	out	0x21, r30	; 33
 104:	f8 9a       	sbi	0x1f, 0	; 31
 106:	31 96       	adiw	r30, 0x01	; 1
 108:	00 b4       	in	r0, 0x20	; 32
 10a:	0d 92       	st	X+, r0
 10c:	41 50       	subi	r20, 0x01	; 1
 10e:	50 40       	sbci	r21, 0x00	; 0
 110:	b8 f7       	brcc	.-18     	; 0x100 <eeprom_read_blraw+0x8>
 112:	08 95       	ret

00000114 <eeprom_write_byte>:
 114:	26 2f       	mov	r18, r22

00000116 <eeprom_write_r18>:
 116:	f9 99       	sbic	0x1f, 1	; 31
 118:	fe cf       	rjmp	.-4      	; 0x116 <eeprom_write_r18>
 11a:	1f ba       	out	0x1f, r1	; 31
 11c:	92 bd       	out	0x22, r25	; 34
 11e:	81 bd       	out	0x21, r24	; 33
 120:	20 bd       	out	0x20, r18	; 32
 122:	0f b6       	in	r0, 0x3f	; 63
 124:	f8 94       	cli
 126:	fa 9a       	sbi	0x1f, 2	; 31
 128:	f9 9a       	sbi	0x1f, 1	; 31
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	01 96       	adiw	r24, 0x01	; 1
 12e:	08 95       	ret

00000130 <_exit>:
 130:	f8 94       	cli

00000132 <__stop_program>:
 132:	ff cf       	rjmp	.-2      	; 0x132 <__stop_program>
