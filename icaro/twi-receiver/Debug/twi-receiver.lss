
twi-receiver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800100  000011da  0000126e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011da  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b3  0080012c  0080012c  0000129a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000129a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00001338  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010a6  00000000  00000000  00001440  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000982  00000000  00000000  000024e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a00  00000000  00000000  00002e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000274  00000000  00000000  00003868  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000684  00000000  00000000  00003adc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008c6  00000000  00000000  00004160  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00004a26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 7e 01 	jmp	0x2fc	; 0x2fc <__ctors_end>
       4:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
       8:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
       c:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      10:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      14:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      18:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      1c:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      20:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      24:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      28:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      2c:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      30:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      34:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      38:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      3c:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      40:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      44:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      48:	0c 94 17 03 	jmp	0x62e	; 0x62e <__vector_18>
      4c:	0c 94 42 03 	jmp	0x684	; 0x684 <__vector_19>
      50:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      54:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      58:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      5c:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      60:	0c 94 f6 01 	jmp	0x3ec	; 0x3ec <__vector_24>
      64:	0c 94 9b 01 	jmp	0x336	; 0x336 <__bad_interrupt>
      68:	02 03       	mulsu	r16, r18
      6a:	06 03       	mulsu	r16, r22
      6c:	06 03       	mulsu	r16, r22
      6e:	06 03       	mulsu	r16, r22
      70:	06 03       	mulsu	r16, r22
      72:	06 03       	mulsu	r16, r22
      74:	06 03       	mulsu	r16, r22
      76:	06 03       	mulsu	r16, r22
      78:	16 02       	muls	r17, r22
      7a:	06 03       	mulsu	r16, r22
      7c:	06 03       	mulsu	r16, r22
      7e:	06 03       	mulsu	r16, r22
      80:	06 03       	mulsu	r16, r22
      82:	06 03       	mulsu	r16, r22
      84:	06 03       	mulsu	r16, r22
      86:	06 03       	mulsu	r16, r22
      88:	16 02       	muls	r17, r22
      8a:	06 03       	mulsu	r16, r22
      8c:	06 03       	mulsu	r16, r22
      8e:	06 03       	mulsu	r16, r22
      90:	06 03       	mulsu	r16, r22
      92:	06 03       	mulsu	r16, r22
      94:	06 03       	mulsu	r16, r22
      96:	06 03       	mulsu	r16, r22
      98:	1e 02       	muls	r17, r30
      9a:	06 03       	mulsu	r16, r22
      9c:	06 03       	mulsu	r16, r22
      9e:	06 03       	mulsu	r16, r22
      a0:	06 03       	mulsu	r16, r22
      a2:	06 03       	mulsu	r16, r22
      a4:	06 03       	mulsu	r16, r22
      a6:	06 03       	mulsu	r16, r22
      a8:	44 02       	muls	r20, r20
      aa:	06 03       	mulsu	r16, r22
      ac:	06 03       	mulsu	r16, r22
      ae:	06 03       	mulsu	r16, r22
      b0:	06 03       	mulsu	r16, r22
      b2:	06 03       	mulsu	r16, r22
      b4:	06 03       	mulsu	r16, r22
      b6:	06 03       	mulsu	r16, r22
      b8:	1e 02       	muls	r17, r30
      ba:	06 03       	mulsu	r16, r22
      bc:	06 03       	mulsu	r16, r22
      be:	06 03       	mulsu	r16, r22
      c0:	06 03       	mulsu	r16, r22
      c2:	06 03       	mulsu	r16, r22
      c4:	06 03       	mulsu	r16, r22
      c6:	06 03       	mulsu	r16, r22
      c8:	4a 02       	muls	r20, r26
      ca:	06 03       	mulsu	r16, r22
      cc:	06 03       	mulsu	r16, r22
      ce:	06 03       	mulsu	r16, r22
      d0:	06 03       	mulsu	r16, r22
      d2:	06 03       	mulsu	r16, r22
      d4:	06 03       	mulsu	r16, r22
      d6:	06 03       	mulsu	r16, r22
      d8:	50 02       	muls	r21, r16
      da:	06 03       	mulsu	r16, r22
      dc:	06 03       	mulsu	r16, r22
      de:	06 03       	mulsu	r16, r22
      e0:	06 03       	mulsu	r16, r22
      e2:	06 03       	mulsu	r16, r22
      e4:	06 03       	mulsu	r16, r22
      e6:	06 03       	mulsu	r16, r22
      e8:	62 02       	muls	r22, r18
      ea:	06 03       	mulsu	r16, r22
      ec:	06 03       	mulsu	r16, r22
      ee:	06 03       	mulsu	r16, r22
      f0:	06 03       	mulsu	r16, r22
      f2:	06 03       	mulsu	r16, r22
      f4:	06 03       	mulsu	r16, r22
      f6:	06 03       	mulsu	r16, r22
      f8:	8c 02       	muls	r24, r28
      fa:	06 03       	mulsu	r16, r22
      fc:	06 03       	mulsu	r16, r22
      fe:	06 03       	mulsu	r16, r22
     100:	06 03       	mulsu	r16, r22
     102:	06 03       	mulsu	r16, r22
     104:	06 03       	mulsu	r16, r22
     106:	06 03       	mulsu	r16, r22
     108:	56 02       	muls	r21, r22
     10a:	06 03       	mulsu	r16, r22
     10c:	06 03       	mulsu	r16, r22
     10e:	06 03       	mulsu	r16, r22
     110:	06 03       	mulsu	r16, r22
     112:	06 03       	mulsu	r16, r22
     114:	06 03       	mulsu	r16, r22
     116:	06 03       	mulsu	r16, r22
     118:	70 02       	muls	r23, r16
     11a:	06 03       	mulsu	r16, r22
     11c:	06 03       	mulsu	r16, r22
     11e:	06 03       	mulsu	r16, r22
     120:	06 03       	mulsu	r16, r22
     122:	06 03       	mulsu	r16, r22
     124:	06 03       	mulsu	r16, r22
     126:	06 03       	mulsu	r16, r22
     128:	8f 02       	muls	r24, r31
     12a:	06 03       	mulsu	r16, r22
     12c:	06 03       	mulsu	r16, r22
     12e:	06 03       	mulsu	r16, r22
     130:	06 03       	mulsu	r16, r22
     132:	06 03       	mulsu	r16, r22
     134:	06 03       	mulsu	r16, r22
     136:	06 03       	mulsu	r16, r22
     138:	8f 02       	muls	r24, r31
     13a:	06 03       	mulsu	r16, r22
     13c:	06 03       	mulsu	r16, r22
     13e:	06 03       	mulsu	r16, r22
     140:	06 03       	mulsu	r16, r22
     142:	06 03       	mulsu	r16, r22
     144:	06 03       	mulsu	r16, r22
     146:	06 03       	mulsu	r16, r22
     148:	8f 02       	muls	r24, r31
     14a:	06 03       	mulsu	r16, r22
     14c:	06 03       	mulsu	r16, r22
     14e:	06 03       	mulsu	r16, r22
     150:	06 03       	mulsu	r16, r22
     152:	06 03       	mulsu	r16, r22
     154:	06 03       	mulsu	r16, r22
     156:	06 03       	mulsu	r16, r22
     158:	8f 02       	muls	r24, r31
     15a:	06 03       	mulsu	r16, r22
     15c:	06 03       	mulsu	r16, r22
     15e:	06 03       	mulsu	r16, r22
     160:	06 03       	mulsu	r16, r22
     162:	06 03       	mulsu	r16, r22
     164:	06 03       	mulsu	r16, r22
     166:	06 03       	mulsu	r16, r22
     168:	98 02       	muls	r25, r24
     16a:	06 03       	mulsu	r16, r22
     16c:	06 03       	mulsu	r16, r22
     16e:	06 03       	mulsu	r16, r22
     170:	06 03       	mulsu	r16, r22
     172:	06 03       	mulsu	r16, r22
     174:	06 03       	mulsu	r16, r22
     176:	06 03       	mulsu	r16, r22
     178:	c9 02       	muls	r28, r25
     17a:	06 03       	mulsu	r16, r22
     17c:	06 03       	mulsu	r16, r22
     17e:	06 03       	mulsu	r16, r22
     180:	06 03       	mulsu	r16, r22
     182:	06 03       	mulsu	r16, r22
     184:	06 03       	mulsu	r16, r22
     186:	06 03       	mulsu	r16, r22
     188:	98 02       	muls	r25, r24
     18a:	06 03       	mulsu	r16, r22
     18c:	06 03       	mulsu	r16, r22
     18e:	06 03       	mulsu	r16, r22
     190:	06 03       	mulsu	r16, r22
     192:	06 03       	mulsu	r16, r22
     194:	06 03       	mulsu	r16, r22
     196:	06 03       	mulsu	r16, r22
     198:	c9 02       	muls	r28, r25
     19a:	06 03       	mulsu	r16, r22
     19c:	06 03       	mulsu	r16, r22
     19e:	06 03       	mulsu	r16, r22
     1a0:	06 03       	mulsu	r16, r22
     1a2:	06 03       	mulsu	r16, r22
     1a4:	06 03       	mulsu	r16, r22
     1a6:	06 03       	mulsu	r16, r22
     1a8:	b0 02       	muls	r27, r16
     1aa:	06 03       	mulsu	r16, r22
     1ac:	06 03       	mulsu	r16, r22
     1ae:	06 03       	mulsu	r16, r22
     1b0:	06 03       	mulsu	r16, r22
     1b2:	06 03       	mulsu	r16, r22
     1b4:	06 03       	mulsu	r16, r22
     1b6:	06 03       	mulsu	r16, r22
     1b8:	cd 02       	muls	r28, r29
     1ba:	06 03       	mulsu	r16, r22
     1bc:	06 03       	mulsu	r16, r22
     1be:	06 03       	mulsu	r16, r22
     1c0:	06 03       	mulsu	r16, r22
     1c2:	06 03       	mulsu	r16, r22
     1c4:	06 03       	mulsu	r16, r22
     1c6:	06 03       	mulsu	r16, r22
     1c8:	cd 02       	muls	r28, r29
     1ca:	06 03       	mulsu	r16, r22
     1cc:	06 03       	mulsu	r16, r22
     1ce:	06 03       	mulsu	r16, r22
     1d0:	06 03       	mulsu	r16, r22
     1d2:	06 03       	mulsu	r16, r22
     1d4:	06 03       	mulsu	r16, r22
     1d6:	06 03       	mulsu	r16, r22
     1d8:	e2 02       	muls	r30, r18
     1da:	06 03       	mulsu	r16, r22
     1dc:	06 03       	mulsu	r16, r22
     1de:	06 03       	mulsu	r16, r22
     1e0:	06 03       	mulsu	r16, r22
     1e2:	06 03       	mulsu	r16, r22
     1e4:	06 03       	mulsu	r16, r22
     1e6:	06 03       	mulsu	r16, r22
     1e8:	fc 02       	muls	r31, r28
     1ea:	06 03       	mulsu	r16, r22
     1ec:	06 03       	mulsu	r16, r22
     1ee:	06 03       	mulsu	r16, r22
     1f0:	06 03       	mulsu	r16, r22
     1f2:	06 03       	mulsu	r16, r22
     1f4:	06 03       	mulsu	r16, r22
     1f6:	06 03       	mulsu	r16, r22
     1f8:	fc 02       	muls	r31, r28

000001fa <__trampolines_end>:
     1fa:	6e 61       	ori	r22, 0x1E	; 30
     1fc:	6e 00       	.word	0x006e	; ????

000001fe <__c.2332>:
     1fe:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     20e:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     21e:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     22e:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     23e:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     24e:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     25e:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     26e:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     27e:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     28e:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     29e:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2ae:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2be:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2ce:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2de:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2ee:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000002fc <__ctors_end>:
     2fc:	11 24       	eor	r1, r1
     2fe:	1f be       	out	0x3f, r1	; 63
     300:	cf ef       	ldi	r28, 0xFF	; 255
     302:	d8 e0       	ldi	r29, 0x08	; 8
     304:	de bf       	out	0x3e, r29	; 62
     306:	cd bf       	out	0x3d, r28	; 61

00000308 <__do_copy_data>:
     308:	11 e0       	ldi	r17, 0x01	; 1
     30a:	a0 e0       	ldi	r26, 0x00	; 0
     30c:	b1 e0       	ldi	r27, 0x01	; 1
     30e:	ea ed       	ldi	r30, 0xDA	; 218
     310:	f1 e1       	ldi	r31, 0x11	; 17
     312:	02 c0       	rjmp	.+4      	; 0x318 <__do_copy_data+0x10>
     314:	05 90       	lpm	r0, Z+
     316:	0d 92       	st	X+, r0
     318:	ac 32       	cpi	r26, 0x2C	; 44
     31a:	b1 07       	cpc	r27, r17
     31c:	d9 f7       	brne	.-10     	; 0x314 <__do_copy_data+0xc>

0000031e <__do_clear_bss>:
     31e:	21 e0       	ldi	r18, 0x01	; 1
     320:	ac e2       	ldi	r26, 0x2C	; 44
     322:	b1 e0       	ldi	r27, 0x01	; 1
     324:	01 c0       	rjmp	.+2      	; 0x328 <.do_clear_bss_start>

00000326 <.do_clear_bss_loop>:
     326:	1d 92       	st	X+, r1

00000328 <.do_clear_bss_start>:
     328:	af 3d       	cpi	r26, 0xDF	; 223
     32a:	b2 07       	cpc	r27, r18
     32c:	e1 f7       	brne	.-8      	; 0x326 <.do_clear_bss_loop>
     32e:	0e 94 bf 01 	call	0x37e	; 0x37e <main>
     332:	0c 94 eb 08 	jmp	0x11d6	; 0x11d6 <_exit>

00000336 <__bad_interrupt>:
     336:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000033a <receive_event>:
#include "icarolib/twi/twi.h"
#include "icarolib/twi/i2cdevlib.h"
#include "icarolib/uart/uart.h"

void receive_event(uint8_t* data, int how_many)
{
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	ec 01       	movw	r28, r24
    while(*data) {
     340:	88 81       	ld	r24, Y
     342:	88 23       	and	r24, r24
     344:	31 f0       	breq	.+12     	; 0x352 <receive_event+0x18>
     346:	21 96       	adiw	r28, 0x01	; 1
        uart_putc(*data++);
     348:	0e 94 85 03 	call	0x70a	; 0x70a <uart_putc>
#include "icarolib/twi/i2cdevlib.h"
#include "icarolib/uart/uart.h"

void receive_event(uint8_t* data, int how_many)
{
    while(*data) {
     34c:	89 91       	ld	r24, Y+
     34e:	81 11       	cpse	r24, r1
     350:	fb cf       	rjmp	.-10     	; 0x348 <receive_event+0xe>
        uart_putc(*data++);
    }
    uart_puts("\n message received \n");
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	91 e0       	ldi	r25, 0x01	; 1
     356:	0e 94 9a 03 	call	0x734	; 0x734 <uart_puts>
}
     35a:	df 91       	pop	r29
     35c:	cf 91       	pop	r28
     35e:	08 95       	ret

00000360 <setup>:

void setup(void)
{
    twi_init();
     360:	0e 94 c6 01 	call	0x38c	; 0x38c <twi_init>
    twi_set_address(4);
     364:	84 e0       	ldi	r24, 0x04	; 4
     366:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <twi_set_address>
    twi_attach_slave_rx_event(receive_event);
     36a:	8d e9       	ldi	r24, 0x9D	; 157
     36c:	91 e0       	ldi	r25, 0x01	; 1
     36e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <twi_attach_slave_rx_event>
    uart_init(UART_BAUD_SELECT(UART_BAUD_RATE, F_CPU));
     372:	80 e1       	ldi	r24, 0x10	; 16
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <uart_init>
    
    sei();
     37a:	78 94       	sei
     37c:	08 95       	ret

0000037e <main>:
}

int main(void)
{
    setup();
     37e:	0e 94 b0 01 	call	0x360	; 0x360 <setup>
    
    uart_puts("hello from receiver \n");
     382:	85 e1       	ldi	r24, 0x15	; 21
     384:	91 e0       	ldi	r25, 0x01	; 1
     386:	0e 94 9a 03 	call	0x734	; 0x734 <uart_puts>
     38a:	ff cf       	rjmp	.-2      	; 0x38a <main+0xc>

0000038c <twi_init>:
}

void twi_reply(uint8_t ack)
{
    if (ack) { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA); }
    else { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT); }
     38c:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <twi_state>
     390:	81 e0       	ldi	r24, 0x01	; 1
     392:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <twi_send_stop>
     396:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <twi_in_rep_start>
     39a:	e9 eb       	ldi	r30, 0xB9	; 185
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	80 81       	ld	r24, Z
     3a0:	8e 7f       	andi	r24, 0xFE	; 254
     3a2:	80 83       	st	Z, r24
     3a4:	80 81       	ld	r24, Z
     3a6:	8d 7f       	andi	r24, 0xFD	; 253
     3a8:	80 83       	st	Z, r24
     3aa:	88 e4       	ldi	r24, 0x48	; 72
     3ac:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     3b0:	85 e4       	ldi	r24, 0x45	; 69
     3b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     3b6:	08 95       	ret

000003b8 <twi_set_address>:
     3b8:	88 0f       	add	r24, r24
     3ba:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7f80ba>
     3be:	08 95       	ret

000003c0 <twi_attach_slave_rx_event>:
     3c0:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <twi_on_slave_receive+0x1>
     3c4:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <twi_on_slave_receive>
     3c8:	08 95       	ret

000003ca <twi_stop>:
     3ca:	85 ed       	ldi	r24, 0xD5	; 213
     3cc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     3d0:	ec eb       	ldi	r30, 0xBC	; 188
     3d2:	f0 e0       	ldi	r31, 0x00	; 0
     3d4:	80 81       	ld	r24, Z
     3d6:	84 fd       	sbrc	r24, 4
     3d8:	fd cf       	rjmp	.-6      	; 0x3d4 <twi_stop+0xa>
     3da:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <twi_state>
     3de:	08 95       	ret

000003e0 <twi_release_bus>:
}

void twi_release_bus(void)
{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
     3e0:	85 ec       	ldi	r24, 0xC5	; 197
     3e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    twi_state = TWI_READY;
     3e6:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <twi_state>
     3ea:	08 95       	ret

000003ec <__vector_24>:
}

ISR(TWI_vect)
{
     3ec:	1f 92       	push	r1
     3ee:	0f 92       	push	r0
     3f0:	0f b6       	in	r0, 0x3f	; 63
     3f2:	0f 92       	push	r0
     3f4:	11 24       	eor	r1, r1
     3f6:	2f 93       	push	r18
     3f8:	3f 93       	push	r19
     3fa:	4f 93       	push	r20
     3fc:	5f 93       	push	r21
     3fe:	6f 93       	push	r22
     400:	7f 93       	push	r23
     402:	8f 93       	push	r24
     404:	9f 93       	push	r25
     406:	af 93       	push	r26
     408:	bf 93       	push	r27
     40a:	ef 93       	push	r30
     40c:	ff 93       	push	r31
    switch(TW_STATUS)
     40e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     412:	e8 2f       	mov	r30, r24
     414:	e8 7f       	andi	r30, 0xF8	; 248
     416:	8e 2f       	mov	r24, r30
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	89 3c       	cpi	r24, 0xC9	; 201
     41c:	91 05       	cpc	r25, r1
     41e:	08 f0       	brcs	.+2      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
     420:	f5 c0       	rjmp	.+490    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
     422:	fc 01       	movw	r30, r24
     424:	ec 5c       	subi	r30, 0xCC	; 204
     426:	ff 4f       	sbci	r31, 0xFF	; 255
     428:	0c 94 26 07 	jmp	0xe4c	; 0xe4c <__tablejump2__>
    {
        // MASTER
        case TW_START: // start condition transmitted
        case TW_REP_START: // repeated start condition transmitted
        {
            TWDR = twi_slarw;
     42c:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <twi_slarw>
     430:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    twi_state = TWI_READY;
}

void twi_reply(uint8_t ack)
{
    if (ack) { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA); }
     434:	85 ec       	ldi	r24, 0xC5	; 197
     436:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     43a:	e8 c0       	rjmp	.+464    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
        
        // MASTER TRANSMITTER
        case TW_MT_SLA_ACK: // SLA+W transmitted, ACK received
        case TW_MT_DATA_ACK: // data transmitted, ACK received
        {
            if (twi_master_buffer_index < twi_master_buffer_length)
     43c:	90 91 70 01 	lds	r25, 0x0170	; 0x800170 <twi_master_buffer_index>
     440:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <twi_master_buffer_length>
     444:	98 17       	cp	r25, r24
     446:	80 f4       	brcc	.+32     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
            {
                TWDR = twi_master_buffer[twi_master_buffer_index++];
     448:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <twi_master_buffer_index>
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	8e 0f       	add	r24, r30
     450:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <twi_master_buffer_index>
     454:	f0 e0       	ldi	r31, 0x00	; 0
     456:	ef 58       	subi	r30, 0x8F	; 143
     458:	fe 4f       	sbci	r31, 0xFE	; 254
     45a:	80 81       	ld	r24, Z
     45c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    twi_state = TWI_READY;
}

void twi_reply(uint8_t ack)
{
    if (ack) { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA); }
     460:	85 ec       	ldi	r24, 0xC5	; 197
     462:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     466:	d2 c0       	rjmp	.+420    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
                TWDR = twi_master_buffer[twi_master_buffer_index++];
                twi_reply(1);
            }
            else
            {
                if (twi_send_stop) { twi_stop(); }
     468:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <twi_send_stop>
     46c:	88 23       	and	r24, r24
     46e:	19 f0       	breq	.+6      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
     470:	0e 94 e5 01 	call	0x3ca	; 0x3ca <twi_stop>
     474:	cb c0       	rjmp	.+406    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
                else
                {
                    twi_in_rep_start = 1;
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <twi_in_rep_start>
                    TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
     47c:	84 ea       	ldi	r24, 0xA4	; 164
     47e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
                    twi_state = TWI_READY;
     482:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <twi_state>
     486:	c2 c0       	rjmp	.+388    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
            }
        }
        break;
        case TW_MT_SLA_NACK:  // SLA+W transmitted, NACK received
        {
            twi_error = TW_MT_SLA_NACK;
     488:	80 e2       	ldi	r24, 0x20	; 32
     48a:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <twi_error>
            twi_stop();
     48e:	0e 94 e5 01 	call	0x3ca	; 0x3ca <twi_stop>
        }
        break;
     492:	bc c0       	rjmp	.+376    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
        case TW_MT_DATA_NACK: // data transmitted, NACK received
        {
            twi_error = TW_MT_DATA_NACK;
     494:	80 e3       	ldi	r24, 0x30	; 48
     496:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <twi_error>
            twi_stop();
     49a:	0e 94 e5 01 	call	0x3ca	; 0x3ca <twi_stop>
        }
        break;
     49e:	b6 c0       	rjmp	.+364    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
        case TW_MT_ARB_LOST: // arbitration lost in SLA+W or data
        {
            twi_error = TW_MT_ARB_LOST;
     4a0:	88 e3       	ldi	r24, 0x38	; 56
     4a2:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <twi_error>
            twi_release_bus();
     4a6:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_release_bus>
        }
        break;
     4aa:	b0 c0       	rjmp	.+352    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
        
        // MASTER RECEIVER
        case TW_MR_DATA_ACK: // data received, ACK returned
        twi_master_buffer[twi_master_buffer_index++] = TWDR;
     4ac:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <twi_master_buffer_index>
     4b0:	81 e0       	ldi	r24, 0x01	; 1
     4b2:	8e 0f       	add	r24, r30
     4b4:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <twi_master_buffer_index>
     4b8:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     4bc:	f0 e0       	ldi	r31, 0x00	; 0
     4be:	ef 58       	subi	r30, 0x8F	; 143
     4c0:	fe 4f       	sbci	r31, 0xFE	; 254
     4c2:	80 83       	st	Z, r24
        /* fall through */
        case TW_MR_SLA_ACK:  // SLA+R transmitted, ACK received
        {
            if (twi_master_buffer_index < twi_master_buffer_length) { twi_reply(1); }
     4c4:	90 91 70 01 	lds	r25, 0x0170	; 0x800170 <twi_master_buffer_index>
     4c8:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <twi_master_buffer_length>
     4cc:	98 17       	cp	r25, r24
     4ce:	20 f4       	brcc	.+8      	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
    twi_state = TWI_READY;
}

void twi_reply(uint8_t ack)
{
    if (ack) { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA); }
     4d0:	85 ec       	ldi	r24, 0xC5	; 197
     4d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     4d6:	9a c0       	rjmp	.+308    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
    else { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT); }
     4d8:	85 e8       	ldi	r24, 0x85	; 133
     4da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     4de:	96 c0       	rjmp	.+300    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
            else { twi_reply(0); }
        }
        break;
        case TW_MR_DATA_NACK: // data received, NACK returned
        {
            twi_master_buffer[twi_master_buffer_index++] = TWDR;
     4e0:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <twi_master_buffer_index>
     4e4:	81 e0       	ldi	r24, 0x01	; 1
     4e6:	8e 0f       	add	r24, r30
     4e8:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <twi_master_buffer_index>
     4ec:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     4f0:	f0 e0       	ldi	r31, 0x00	; 0
     4f2:	ef 58       	subi	r30, 0x8F	; 143
     4f4:	fe 4f       	sbci	r31, 0xFE	; 254
     4f6:	80 83       	st	Z, r24
            if (twi_send_stop) { twi_stop(); }
     4f8:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <twi_send_stop>
     4fc:	88 23       	and	r24, r24
     4fe:	19 f0       	breq	.+6      	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
     500:	0e 94 e5 01 	call	0x3ca	; 0x3ca <twi_stop>
     504:	83 c0       	rjmp	.+262    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
            else {
                twi_in_rep_start = 1;
     506:	81 e0       	ldi	r24, 0x01	; 1
     508:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <twi_in_rep_start>
                TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
     50c:	84 ea       	ldi	r24, 0xA4	; 164
     50e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
                twi_state = TWI_READY;
     512:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <twi_state>
     516:	7a c0       	rjmp	.+244    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
            }
        }
        break;
        case TW_MR_SLA_NACK: // SLA+R transmitted, NACK received
        {
            twi_stop();
     518:	0e 94 e5 01 	call	0x3ca	; 0x3ca <twi_stop>
        }
        break;
     51c:	77 c0       	rjmp	.+238    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
        case TW_SR_SLA_ACK: // SLA+W received, ACK returned
        case TW_SR_GCALL_ACK: // general call received, ACK returned
        case TW_SR_ARB_LOST_SLA_ACK:   // arbitration lost in SLA+RW, SLA+W received, ACK returned
        case TW_SR_ARB_LOST_GCALL_ACK: // arbitration lost in SLA+RW, general call received, ACK returned
        {
            twi_state = TWI_SRX;
     51e:	83 e0       	ldi	r24, 0x03	; 3
     520:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <twi_state>
            twi_rx_buffer_index = 0;
     524:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <__data_end>
    twi_state = TWI_READY;
}

void twi_reply(uint8_t ack)
{
    if (ack) { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA); }
     528:	85 ec       	ldi	r24, 0xC5	; 197
     52a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     52e:	6e c0       	rjmp	.+220    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
        }
        break;
        case TW_SR_DATA_ACK: // data received, ACK returned
        case TW_SR_GCALL_DATA_ACK: // general call data received, ACK returned
        {
            if (twi_rx_buffer_index < TWI_BUFFER_LENGTH) {
     530:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <__data_end>
     534:	80 32       	cpi	r24, 0x20	; 32
     536:	80 f4       	brcc	.+32     	; 0x558 <__EEPROM_REGION_LENGTH__+0x158>
                
                twi_rx_buffer[twi_rx_buffer_index++] = TWDR;
     538:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <__data_end>
     53c:	81 e0       	ldi	r24, 0x01	; 1
     53e:	8e 0f       	add	r24, r30
     540:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__data_end>
     544:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	e3 5d       	subi	r30, 0xD3	; 211
     54c:	fe 4f       	sbci	r31, 0xFE	; 254
     54e:	80 83       	st	Z, r24
    twi_state = TWI_READY;
}

void twi_reply(uint8_t ack)
{
    if (ack) { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA); }
     550:	85 ec       	ldi	r24, 0xC5	; 197
     552:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     556:	5a c0       	rjmp	.+180    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
    else { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT); }
     558:	85 e8       	ldi	r24, 0x85	; 133
     55a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     55e:	56 c0       	rjmp	.+172    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
            
        }
        break;
        case TW_SR_STOP: // stop or repeated start condition received while selected
        {
            twi_release_bus();
     560:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <twi_release_bus>
            if(twi_rx_buffer_index < TWI_BUFFER_LENGTH) { twi_rx_buffer[twi_rx_buffer_index] = '\0'; }
     564:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <__data_end>
     568:	80 32       	cpi	r24, 0x20	; 32
     56a:	30 f4       	brcc	.+12     	; 0x578 <__EEPROM_REGION_LENGTH__+0x178>
     56c:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <__data_end>
     570:	f0 e0       	ldi	r31, 0x00	; 0
     572:	e3 5d       	subi	r30, 0xD3	; 211
     574:	fe 4f       	sbci	r31, 0xFE	; 254
     576:	10 82       	st	Z, r1
            twi_on_slave_receive(twi_rx_buffer, twi_rx_buffer_index);
     578:	60 91 2c 01 	lds	r22, 0x012C	; 0x80012c <__data_end>
     57c:	70 e0       	ldi	r23, 0x00	; 0
     57e:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <twi_on_slave_receive>
     582:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <twi_on_slave_receive+0x1>
     586:	8d e2       	ldi	r24, 0x2D	; 45
     588:	91 e0       	ldi	r25, 0x01	; 1
     58a:	09 95       	icall
            twi_rx_buffer_index = 0;
     58c:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <__data_end>
        }
        break;
     590:	3d c0       	rjmp	.+122    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
}

void twi_reply(uint8_t ack)
{
    if (ack) { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA); }
    else { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT); }
     592:	85 e8       	ldi	r24, 0x85	; 133
     594:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     598:	39 c0       	rjmp	.+114    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
        // SLAVE TRANSMITTER
        case TW_ST_SLA_ACK: // SLA+R received, ACK returned
        case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost in SLA+RW, SLA+R received, ACK returned
        {
            
            twi_state = TWI_STX;
     59a:	84 e0       	ldi	r24, 0x04	; 4
     59c:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <twi_state>
            twi_tx_buffer_index = 0;
     5a0:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <twi_tx_buffer_index>
            twi_tx_buffer_length = 0;
     5a4:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <twi_tx_buffer_length>
            twi_on_slave_transmit();
     5a8:	e0 91 93 01 	lds	r30, 0x0193	; 0x800193 <twi_on_slave_transmit>
     5ac:	f0 91 94 01 	lds	r31, 0x0194	; 0x800194 <twi_on_slave_transmit+0x1>
     5b0:	09 95       	icall
            if (0 == twi_tx_buffer_length) {
     5b2:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <twi_tx_buffer_length>
     5b6:	81 11       	cpse	r24, r1
     5b8:	05 c0       	rjmp	.+10     	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
                twi_tx_buffer_length = 1;
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <twi_tx_buffer_length>
                twi_tx_buffer[0] = 0x00;
     5c0:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <twi_tx_buffer>
            }
        }
        /* fall through */
        case TW_ST_DATA_ACK: // data transmitted, ACK received
        {
            TWDR = twi_tx_buffer[twi_tx_buffer_index++];
     5c4:	e0 91 4e 01 	lds	r30, 0x014E	; 0x80014e <twi_tx_buffer_index>
     5c8:	81 e0       	ldi	r24, 0x01	; 1
     5ca:	8e 0f       	add	r24, r30
     5cc:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <twi_tx_buffer_index>
     5d0:	f0 e0       	ldi	r31, 0x00	; 0
     5d2:	e1 5b       	subi	r30, 0xB1	; 177
     5d4:	fe 4f       	sbci	r31, 0xFE	; 254
     5d6:	80 81       	ld	r24, Z
     5d8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
            if (twi_tx_buffer_index < twi_tx_buffer_length) { twi_reply(1); }
     5dc:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <twi_tx_buffer_index>
     5e0:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <twi_tx_buffer_length>
     5e4:	98 17       	cp	r25, r24
     5e6:	20 f4       	brcc	.+8      	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
    twi_state = TWI_READY;
}

void twi_reply(uint8_t ack)
{
    if (ack) { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA); }
     5e8:	85 ec       	ldi	r24, 0xC5	; 197
     5ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     5ee:	0e c0       	rjmp	.+28     	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
    else { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT); }
     5f0:	85 e8       	ldi	r24, 0x85	; 133
     5f2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
    twi_state = TWI_READY;
}

void twi_reply(uint8_t ack)
{
    if (ack) { TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA); }
     5f8:	85 ec       	ldi	r24, 0xC5	; 197
     5fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
        break;
        case TW_ST_DATA_NACK: // data transmitted, NACK received
        case TW_ST_LAST_DATA: // last data byte transmitted, ACK received
        {
            twi_reply(1);
            twi_state = TWI_READY;
     5fe:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <twi_state>
        }
        break;
     602:	04 c0       	rjmp	.+8      	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
        // MISC
        case TW_NO_INFO:   // no state information available
        break;
        case TW_BUS_ERROR: // illegal start or stop condition
        {
            twi_error = TW_BUS_ERROR;
     604:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <twi_error>
            twi_stop();
     608:	0e 94 e5 01 	call	0x3ca	; 0x3ca <twi_stop>
        }
        break;
    }
     60c:	ff 91       	pop	r31
     60e:	ef 91       	pop	r30
     610:	bf 91       	pop	r27
     612:	af 91       	pop	r26
     614:	9f 91       	pop	r25
     616:	8f 91       	pop	r24
     618:	7f 91       	pop	r23
     61a:	6f 91       	pop	r22
     61c:	5f 91       	pop	r21
     61e:	4f 91       	pop	r20
     620:	3f 91       	pop	r19
     622:	2f 91       	pop	r18
     624:	0f 90       	pop	r0
     626:	0f be       	out	0x3f, r0	; 63
     628:	0f 90       	pop	r0
     62a:	1f 90       	pop	r1
     62c:	18 95       	reti

0000062e <__vector_18>:
    /* get data from receive buffer */
    data = UART_RxBuf[tmptail];
    
    return (UART_LastRxError << 8) + data;

}/* uart_getc */
     62e:	1f 92       	push	r1
     630:	0f 92       	push	r0
     632:	0f b6       	in	r0, 0x3f	; 63
     634:	0f 92       	push	r0
     636:	11 24       	eor	r1, r1
     638:	2f 93       	push	r18
     63a:	8f 93       	push	r24
     63c:	9f 93       	push	r25
     63e:	ef 93       	push	r30
     640:	ff 93       	push	r31
     642:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     646:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     64a:	88 71       	andi	r24, 0x18	; 24
     64c:	e0 91 9c 01 	lds	r30, 0x019C	; 0x80019c <UART_RxHead>
     650:	ef 5f       	subi	r30, 0xFF	; 255
     652:	ef 71       	andi	r30, 0x1F	; 31
     654:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <UART_RxTail>
     658:	e9 17       	cp	r30, r25
     65a:	39 f0       	breq	.+14     	; 0x66a <__vector_18+0x3c>
     65c:	e0 93 9c 01 	sts	0x019C, r30	; 0x80019c <UART_RxHead>
     660:	f0 e0       	ldi	r31, 0x00	; 0
     662:	e1 56       	subi	r30, 0x61	; 97
     664:	fe 4f       	sbci	r31, 0xFE	; 254
     666:	20 83       	st	Z, r18
     668:	01 c0       	rjmp	.+2      	; 0x66c <__vector_18+0x3e>
     66a:	82 e0       	ldi	r24, 0x02	; 2
     66c:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <UART_LastRxError>
     670:	ff 91       	pop	r31
     672:	ef 91       	pop	r30
     674:	9f 91       	pop	r25
     676:	8f 91       	pop	r24
     678:	2f 91       	pop	r18
     67a:	0f 90       	pop	r0
     67c:	0f be       	out	0x3f, r0	; 63
     67e:	0f 90       	pop	r0
     680:	1f 90       	pop	r1
     682:	18 95       	reti

00000684 <__vector_19>:
     684:	1f 92       	push	r1
     686:	0f 92       	push	r0
     688:	0f b6       	in	r0, 0x3f	; 63
     68a:	0f 92       	push	r0
     68c:	11 24       	eor	r1, r1
     68e:	8f 93       	push	r24
     690:	9f 93       	push	r25
     692:	ef 93       	push	r30
     694:	ff 93       	push	r31
     696:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <UART_TxHead>
     69a:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <UART_TxTail>
     69e:	98 17       	cp	r25, r24
     6a0:	69 f0       	breq	.+26     	; 0x6bc <__vector_19+0x38>
     6a2:	e0 91 9d 01 	lds	r30, 0x019D	; 0x80019d <UART_TxTail>
     6a6:	ef 5f       	subi	r30, 0xFF	; 255
     6a8:	ef 71       	andi	r30, 0x1F	; 31
     6aa:	e0 93 9d 01 	sts	0x019D, r30	; 0x80019d <UART_TxTail>
     6ae:	f0 e0       	ldi	r31, 0x00	; 0
     6b0:	e1 54       	subi	r30, 0x41	; 65
     6b2:	fe 4f       	sbci	r31, 0xFE	; 254
     6b4:	80 81       	ld	r24, Z
     6b6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     6ba:	05 c0       	rjmp	.+10     	; 0x6c6 <__vector_19+0x42>
     6bc:	e1 ec       	ldi	r30, 0xC1	; 193
     6be:	f0 e0       	ldi	r31, 0x00	; 0
     6c0:	80 81       	ld	r24, Z
     6c2:	8f 7d       	andi	r24, 0xDF	; 223
     6c4:	80 83       	st	Z, r24
     6c6:	ff 91       	pop	r31
     6c8:	ef 91       	pop	r30
     6ca:	9f 91       	pop	r25
     6cc:	8f 91       	pop	r24
     6ce:	0f 90       	pop	r0
     6d0:	0f be       	out	0x3f, r0	; 63
     6d2:	0f 90       	pop	r0
     6d4:	1f 90       	pop	r1
     6d6:	18 95       	reti

000006d8 <uart_init>:
     6d8:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <UART_TxHead>
     6dc:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <UART_TxTail>
     6e0:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <UART_RxHead>
     6e4:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <UART_RxTail>
     6e8:	99 23       	and	r25, r25
     6ea:	24 f4       	brge	.+8      	; 0x6f4 <uart_init+0x1c>
     6ec:	22 e0       	ldi	r18, 0x02	; 2
     6ee:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     6f2:	9f 77       	andi	r25, 0x7F	; 127
     6f4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     6f8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     6fc:	88 e9       	ldi	r24, 0x98	; 152
     6fe:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     702:	86 e0       	ldi	r24, 0x06	; 6
     704:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     708:	08 95       	ret

0000070a <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;

    
    tmphead  = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
     70a:	20 91 9e 01 	lds	r18, 0x019E	; 0x80019e <UART_TxHead>
     70e:	2f 5f       	subi	r18, 0xFF	; 255
     710:	2f 71       	andi	r18, 0x1F	; 31
    
    while ( tmphead == UART_TxTail ){
     712:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <UART_TxTail>
     716:	29 17       	cp	r18, r25
     718:	e1 f3       	breq	.-8      	; 0x712 <uart_putc+0x8>
        ;/* wait for free space in buffer */
    }
    
    UART_TxBuf[tmphead] = data;
     71a:	e2 2f       	mov	r30, r18
     71c:	f0 e0       	ldi	r31, 0x00	; 0
     71e:	e1 54       	subi	r30, 0x41	; 65
     720:	fe 4f       	sbci	r31, 0xFE	; 254
     722:	80 83       	st	Z, r24
    UART_TxHead = tmphead;
     724:	20 93 9e 01 	sts	0x019E, r18	; 0x80019e <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL    |= _BV(UART0_UDRIE);
     728:	e1 ec       	ldi	r30, 0xC1	; 193
     72a:	f0 e0       	ldi	r31, 0x00	; 0
     72c:	80 81       	ld	r24, Z
     72e:	80 62       	ori	r24, 0x20	; 32
     730:	80 83       	st	Z, r24
     732:	08 95       	ret

00000734 <uart_puts>:
Purpose:  transmit string to UART
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
     734:	cf 93       	push	r28
     736:	df 93       	push	r29
     738:	ec 01       	movw	r28, r24
    while (*s) 
     73a:	88 81       	ld	r24, Y
     73c:	88 23       	and	r24, r24
     73e:	31 f0       	breq	.+12     	; 0x74c <uart_puts+0x18>
     740:	21 96       	adiw	r28, 0x01	; 1
      uart_putc(*s++);
     742:	0e 94 85 03 	call	0x70a	; 0x70a <uart_putc>
Input:    string to be transmitted
Returns:  none          
**************************************************************************/
void uart_puts(const char *s )
{
    while (*s) 
     746:	89 91       	ld	r24, Y+
     748:	81 11       	cpse	r24, r1
     74a:	fb cf       	rjmp	.-10     	; 0x742 <uart_puts+0xe>
      uart_putc(*s++);

}/* uart_puts */
     74c:	df 91       	pop	r29
     74e:	cf 91       	pop	r28
     750:	08 95       	ret

00000752 <vfprintf>:
     752:	a0 e1       	ldi	r26, 0x10	; 16
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 2c 07 	jmp	0xe58	; 0xe58 <__prologue_saves__>
     75e:	7c 01       	movw	r14, r24
     760:	1b 01       	movw	r2, r22
     762:	6a 01       	movw	r12, r20
     764:	fc 01       	movw	r30, r24
     766:	17 82       	std	Z+7, r1	; 0x07
     768:	16 82       	std	Z+6, r1	; 0x06
     76a:	83 81       	ldd	r24, Z+3	; 0x03
     76c:	81 ff       	sbrs	r24, 1
     76e:	44 c3       	rjmp	.+1672   	; 0xdf8 <__stack+0x4f9>
     770:	9e 01       	movw	r18, r28
     772:	2f 5f       	subi	r18, 0xFF	; 255
     774:	3f 4f       	sbci	r19, 0xFF	; 255
     776:	39 01       	movw	r6, r18
     778:	f7 01       	movw	r30, r14
     77a:	93 81       	ldd	r25, Z+3	; 0x03
     77c:	f1 01       	movw	r30, r2
     77e:	93 fd       	sbrc	r25, 3
     780:	85 91       	lpm	r24, Z+
     782:	93 ff       	sbrs	r25, 3
     784:	81 91       	ld	r24, Z+
     786:	1f 01       	movw	r2, r30
     788:	88 23       	and	r24, r24
     78a:	09 f4       	brne	.+2      	; 0x78e <vfprintf+0x3c>
     78c:	31 c3       	rjmp	.+1634   	; 0xdf0 <__stack+0x4f1>
     78e:	85 32       	cpi	r24, 0x25	; 37
     790:	39 f4       	brne	.+14     	; 0x7a0 <vfprintf+0x4e>
     792:	93 fd       	sbrc	r25, 3
     794:	85 91       	lpm	r24, Z+
     796:	93 ff       	sbrs	r25, 3
     798:	81 91       	ld	r24, Z+
     79a:	1f 01       	movw	r2, r30
     79c:	85 32       	cpi	r24, 0x25	; 37
     79e:	39 f4       	brne	.+14     	; 0x7ae <vfprintf+0x5c>
     7a0:	b7 01       	movw	r22, r14
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     7a8:	56 01       	movw	r10, r12
     7aa:	65 01       	movw	r12, r10
     7ac:	e5 cf       	rjmp	.-54     	; 0x778 <vfprintf+0x26>
     7ae:	10 e0       	ldi	r17, 0x00	; 0
     7b0:	51 2c       	mov	r5, r1
     7b2:	91 2c       	mov	r9, r1
     7b4:	ff e1       	ldi	r31, 0x1F	; 31
     7b6:	f9 15       	cp	r31, r9
     7b8:	d8 f0       	brcs	.+54     	; 0x7f0 <vfprintf+0x9e>
     7ba:	8b 32       	cpi	r24, 0x2B	; 43
     7bc:	79 f0       	breq	.+30     	; 0x7dc <vfprintf+0x8a>
     7be:	38 f4       	brcc	.+14     	; 0x7ce <vfprintf+0x7c>
     7c0:	80 32       	cpi	r24, 0x20	; 32
     7c2:	79 f0       	breq	.+30     	; 0x7e2 <vfprintf+0x90>
     7c4:	83 32       	cpi	r24, 0x23	; 35
     7c6:	a1 f4       	brne	.+40     	; 0x7f0 <vfprintf+0x9e>
     7c8:	f9 2d       	mov	r31, r9
     7ca:	f0 61       	ori	r31, 0x10	; 16
     7cc:	2e c0       	rjmp	.+92     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     7ce:	8d 32       	cpi	r24, 0x2D	; 45
     7d0:	61 f0       	breq	.+24     	; 0x7ea <vfprintf+0x98>
     7d2:	80 33       	cpi	r24, 0x30	; 48
     7d4:	69 f4       	brne	.+26     	; 0x7f0 <vfprintf+0x9e>
     7d6:	29 2d       	mov	r18, r9
     7d8:	21 60       	ori	r18, 0x01	; 1
     7da:	2d c0       	rjmp	.+90     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
     7dc:	39 2d       	mov	r19, r9
     7de:	32 60       	ori	r19, 0x02	; 2
     7e0:	93 2e       	mov	r9, r19
     7e2:	89 2d       	mov	r24, r9
     7e4:	84 60       	ori	r24, 0x04	; 4
     7e6:	98 2e       	mov	r9, r24
     7e8:	2a c0       	rjmp	.+84     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     7ea:	e9 2d       	mov	r30, r9
     7ec:	e8 60       	ori	r30, 0x08	; 8
     7ee:	15 c0       	rjmp	.+42     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
     7f0:	97 fc       	sbrc	r9, 7
     7f2:	2d c0       	rjmp	.+90     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     7f4:	20 ed       	ldi	r18, 0xD0	; 208
     7f6:	28 0f       	add	r18, r24
     7f8:	2a 30       	cpi	r18, 0x0A	; 10
     7fa:	88 f4       	brcc	.+34     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7fc:	96 fe       	sbrs	r9, 6
     7fe:	06 c0       	rjmp	.+12     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
     800:	3a e0       	ldi	r19, 0x0A	; 10
     802:	13 9f       	mul	r17, r19
     804:	20 0d       	add	r18, r0
     806:	11 24       	eor	r1, r1
     808:	12 2f       	mov	r17, r18
     80a:	19 c0       	rjmp	.+50     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     80c:	8a e0       	ldi	r24, 0x0A	; 10
     80e:	58 9e       	mul	r5, r24
     810:	20 0d       	add	r18, r0
     812:	11 24       	eor	r1, r1
     814:	52 2e       	mov	r5, r18
     816:	e9 2d       	mov	r30, r9
     818:	e0 62       	ori	r30, 0x20	; 32
     81a:	9e 2e       	mov	r9, r30
     81c:	10 c0       	rjmp	.+32     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     81e:	8e 32       	cpi	r24, 0x2E	; 46
     820:	31 f4       	brne	.+12     	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
     822:	96 fc       	sbrc	r9, 6
     824:	e5 c2       	rjmp	.+1482   	; 0xdf0 <__stack+0x4f1>
     826:	f9 2d       	mov	r31, r9
     828:	f0 64       	ori	r31, 0x40	; 64
     82a:	9f 2e       	mov	r9, r31
     82c:	08 c0       	rjmp	.+16     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     82e:	8c 36       	cpi	r24, 0x6C	; 108
     830:	21 f4       	brne	.+8      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     832:	29 2d       	mov	r18, r9
     834:	20 68       	ori	r18, 0x80	; 128
     836:	92 2e       	mov	r9, r18
     838:	02 c0       	rjmp	.+4      	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     83a:	88 36       	cpi	r24, 0x68	; 104
     83c:	41 f4       	brne	.+16     	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     83e:	f1 01       	movw	r30, r2
     840:	93 fd       	sbrc	r25, 3
     842:	85 91       	lpm	r24, Z+
     844:	93 ff       	sbrs	r25, 3
     846:	81 91       	ld	r24, Z+
     848:	1f 01       	movw	r2, r30
     84a:	81 11       	cpse	r24, r1
     84c:	b3 cf       	rjmp	.-154    	; 0x7b4 <vfprintf+0x62>
     84e:	9b eb       	ldi	r25, 0xBB	; 187
     850:	98 0f       	add	r25, r24
     852:	93 30       	cpi	r25, 0x03	; 3
     854:	20 f4       	brcc	.+8      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     856:	99 2d       	mov	r25, r9
     858:	90 61       	ori	r25, 0x10	; 16
     85a:	80 5e       	subi	r24, 0xE0	; 224
     85c:	07 c0       	rjmp	.+14     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
     85e:	9b e9       	ldi	r25, 0x9B	; 155
     860:	98 0f       	add	r25, r24
     862:	93 30       	cpi	r25, 0x03	; 3
     864:	08 f0       	brcs	.+2      	; 0x868 <__DATA_REGION_LENGTH__+0x68>
     866:	66 c1       	rjmp	.+716    	; 0xb34 <__stack+0x235>
     868:	99 2d       	mov	r25, r9
     86a:	9f 7e       	andi	r25, 0xEF	; 239
     86c:	96 ff       	sbrs	r25, 6
     86e:	16 e0       	ldi	r17, 0x06	; 6
     870:	9f 73       	andi	r25, 0x3F	; 63
     872:	99 2e       	mov	r9, r25
     874:	85 36       	cpi	r24, 0x65	; 101
     876:	19 f4       	brne	.+6      	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
     878:	90 64       	ori	r25, 0x40	; 64
     87a:	99 2e       	mov	r9, r25
     87c:	08 c0       	rjmp	.+16     	; 0x88e <__DATA_REGION_LENGTH__+0x8e>
     87e:	86 36       	cpi	r24, 0x66	; 102
     880:	21 f4       	brne	.+8      	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
     882:	39 2f       	mov	r19, r25
     884:	30 68       	ori	r19, 0x80	; 128
     886:	93 2e       	mov	r9, r19
     888:	02 c0       	rjmp	.+4      	; 0x88e <__DATA_REGION_LENGTH__+0x8e>
     88a:	11 11       	cpse	r17, r1
     88c:	11 50       	subi	r17, 0x01	; 1
     88e:	97 fe       	sbrs	r9, 7
     890:	07 c0       	rjmp	.+14     	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
     892:	1c 33       	cpi	r17, 0x3C	; 60
     894:	50 f4       	brcc	.+20     	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
     896:	44 24       	eor	r4, r4
     898:	43 94       	inc	r4
     89a:	41 0e       	add	r4, r17
     89c:	27 e0       	ldi	r18, 0x07	; 7
     89e:	0b c0       	rjmp	.+22     	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
     8a0:	18 30       	cpi	r17, 0x08	; 8
     8a2:	38 f0       	brcs	.+14     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
     8a4:	27 e0       	ldi	r18, 0x07	; 7
     8a6:	17 e0       	ldi	r17, 0x07	; 7
     8a8:	05 c0       	rjmp	.+10     	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
     8aa:	27 e0       	ldi	r18, 0x07	; 7
     8ac:	9c e3       	ldi	r25, 0x3C	; 60
     8ae:	49 2e       	mov	r4, r25
     8b0:	02 c0       	rjmp	.+4      	; 0x8b6 <__DATA_REGION_LENGTH__+0xb6>
     8b2:	21 2f       	mov	r18, r17
     8b4:	41 2c       	mov	r4, r1
     8b6:	56 01       	movw	r10, r12
     8b8:	84 e0       	ldi	r24, 0x04	; 4
     8ba:	a8 0e       	add	r10, r24
     8bc:	b1 1c       	adc	r11, r1
     8be:	f6 01       	movw	r30, r12
     8c0:	60 81       	ld	r22, Z
     8c2:	71 81       	ldd	r23, Z+1	; 0x01
     8c4:	82 81       	ldd	r24, Z+2	; 0x02
     8c6:	93 81       	ldd	r25, Z+3	; 0x03
     8c8:	04 2d       	mov	r16, r4
     8ca:	a3 01       	movw	r20, r6
     8cc:	0e 94 63 07 	call	0xec6	; 0xec6 <__ftoa_engine>
     8d0:	6c 01       	movw	r12, r24
     8d2:	f9 81       	ldd	r31, Y+1	; 0x01
     8d4:	fc 87       	std	Y+12, r31	; 0x0c
     8d6:	f0 ff       	sbrs	r31, 0
     8d8:	02 c0       	rjmp	.+4      	; 0x8de <__DATA_REGION_LENGTH__+0xde>
     8da:	f3 ff       	sbrs	r31, 3
     8dc:	06 c0       	rjmp	.+12     	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
     8de:	91 fc       	sbrc	r9, 1
     8e0:	06 c0       	rjmp	.+12     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
     8e2:	92 fe       	sbrs	r9, 2
     8e4:	06 c0       	rjmp	.+12     	; 0x8f2 <__DATA_REGION_LENGTH__+0xf2>
     8e6:	00 e2       	ldi	r16, 0x20	; 32
     8e8:	05 c0       	rjmp	.+10     	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
     8ea:	0d e2       	ldi	r16, 0x2D	; 45
     8ec:	03 c0       	rjmp	.+6      	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
     8ee:	0b e2       	ldi	r16, 0x2B	; 43
     8f0:	01 c0       	rjmp	.+2      	; 0x8f4 <__DATA_REGION_LENGTH__+0xf4>
     8f2:	00 e0       	ldi	r16, 0x00	; 0
     8f4:	8c 85       	ldd	r24, Y+12	; 0x0c
     8f6:	8c 70       	andi	r24, 0x0C	; 12
     8f8:	19 f0       	breq	.+6      	; 0x900 <__stack+0x1>
     8fa:	01 11       	cpse	r16, r1
     8fc:	5a c2       	rjmp	.+1204   	; 0xdb2 <__stack+0x4b3>
     8fe:	9b c2       	rjmp	.+1334   	; 0xe36 <__stack+0x537>
     900:	97 fe       	sbrs	r9, 7
     902:	10 c0       	rjmp	.+32     	; 0x924 <__stack+0x25>
     904:	4c 0c       	add	r4, r12
     906:	fc 85       	ldd	r31, Y+12	; 0x0c
     908:	f4 ff       	sbrs	r31, 4
     90a:	04 c0       	rjmp	.+8      	; 0x914 <__stack+0x15>
     90c:	8a 81       	ldd	r24, Y+2	; 0x02
     90e:	81 33       	cpi	r24, 0x31	; 49
     910:	09 f4       	brne	.+2      	; 0x914 <__stack+0x15>
     912:	4a 94       	dec	r4
     914:	14 14       	cp	r1, r4
     916:	74 f5       	brge	.+92     	; 0x974 <__stack+0x75>
     918:	28 e0       	ldi	r18, 0x08	; 8
     91a:	24 15       	cp	r18, r4
     91c:	78 f5       	brcc	.+94     	; 0x97c <__stack+0x7d>
     91e:	88 e0       	ldi	r24, 0x08	; 8
     920:	48 2e       	mov	r4, r24
     922:	2c c0       	rjmp	.+88     	; 0x97c <__stack+0x7d>
     924:	96 fc       	sbrc	r9, 6
     926:	2a c0       	rjmp	.+84     	; 0x97c <__stack+0x7d>
     928:	81 2f       	mov	r24, r17
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	8c 15       	cp	r24, r12
     92e:	9d 05       	cpc	r25, r13
     930:	9c f0       	brlt	.+38     	; 0x958 <__stack+0x59>
     932:	3c ef       	ldi	r19, 0xFC	; 252
     934:	c3 16       	cp	r12, r19
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	d3 06       	cpc	r13, r19
     93a:	74 f0       	brlt	.+28     	; 0x958 <__stack+0x59>
     93c:	89 2d       	mov	r24, r9
     93e:	80 68       	ori	r24, 0x80	; 128
     940:	98 2e       	mov	r9, r24
     942:	0a c0       	rjmp	.+20     	; 0x958 <__stack+0x59>
     944:	e2 e0       	ldi	r30, 0x02	; 2
     946:	f0 e0       	ldi	r31, 0x00	; 0
     948:	ec 0f       	add	r30, r28
     94a:	fd 1f       	adc	r31, r29
     94c:	e1 0f       	add	r30, r17
     94e:	f1 1d       	adc	r31, r1
     950:	80 81       	ld	r24, Z
     952:	80 33       	cpi	r24, 0x30	; 48
     954:	19 f4       	brne	.+6      	; 0x95c <__stack+0x5d>
     956:	11 50       	subi	r17, 0x01	; 1
     958:	11 11       	cpse	r17, r1
     95a:	f4 cf       	rjmp	.-24     	; 0x944 <__stack+0x45>
     95c:	97 fe       	sbrs	r9, 7
     95e:	0e c0       	rjmp	.+28     	; 0x97c <__stack+0x7d>
     960:	44 24       	eor	r4, r4
     962:	43 94       	inc	r4
     964:	41 0e       	add	r4, r17
     966:	81 2f       	mov	r24, r17
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	c8 16       	cp	r12, r24
     96c:	d9 06       	cpc	r13, r25
     96e:	2c f4       	brge	.+10     	; 0x97a <__stack+0x7b>
     970:	1c 19       	sub	r17, r12
     972:	04 c0       	rjmp	.+8      	; 0x97c <__stack+0x7d>
     974:	44 24       	eor	r4, r4
     976:	43 94       	inc	r4
     978:	01 c0       	rjmp	.+2      	; 0x97c <__stack+0x7d>
     97a:	10 e0       	ldi	r17, 0x00	; 0
     97c:	97 fe       	sbrs	r9, 7
     97e:	06 c0       	rjmp	.+12     	; 0x98c <__stack+0x8d>
     980:	1c 14       	cp	r1, r12
     982:	1d 04       	cpc	r1, r13
     984:	34 f4       	brge	.+12     	; 0x992 <__stack+0x93>
     986:	c6 01       	movw	r24, r12
     988:	01 96       	adiw	r24, 0x01	; 1
     98a:	05 c0       	rjmp	.+10     	; 0x996 <__stack+0x97>
     98c:	85 e0       	ldi	r24, 0x05	; 5
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	02 c0       	rjmp	.+4      	; 0x996 <__stack+0x97>
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	01 11       	cpse	r16, r1
     998:	01 96       	adiw	r24, 0x01	; 1
     99a:	11 23       	and	r17, r17
     99c:	31 f0       	breq	.+12     	; 0x9aa <__stack+0xab>
     99e:	21 2f       	mov	r18, r17
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	2f 5f       	subi	r18, 0xFF	; 255
     9a4:	3f 4f       	sbci	r19, 0xFF	; 255
     9a6:	82 0f       	add	r24, r18
     9a8:	93 1f       	adc	r25, r19
     9aa:	25 2d       	mov	r18, r5
     9ac:	30 e0       	ldi	r19, 0x00	; 0
     9ae:	82 17       	cp	r24, r18
     9b0:	93 07       	cpc	r25, r19
     9b2:	14 f4       	brge	.+4      	; 0x9b8 <__stack+0xb9>
     9b4:	58 1a       	sub	r5, r24
     9b6:	01 c0       	rjmp	.+2      	; 0x9ba <__stack+0xbb>
     9b8:	51 2c       	mov	r5, r1
     9ba:	89 2d       	mov	r24, r9
     9bc:	89 70       	andi	r24, 0x09	; 9
     9be:	49 f4       	brne	.+18     	; 0x9d2 <__stack+0xd3>
     9c0:	55 20       	and	r5, r5
     9c2:	39 f0       	breq	.+14     	; 0x9d2 <__stack+0xd3>
     9c4:	b7 01       	movw	r22, r14
     9c6:	80 e2       	ldi	r24, 0x20	; 32
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     9ce:	5a 94       	dec	r5
     9d0:	f7 cf       	rjmp	.-18     	; 0x9c0 <__stack+0xc1>
     9d2:	00 23       	and	r16, r16
     9d4:	29 f0       	breq	.+10     	; 0x9e0 <__stack+0xe1>
     9d6:	b7 01       	movw	r22, r14
     9d8:	80 2f       	mov	r24, r16
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     9e0:	93 fc       	sbrc	r9, 3
     9e2:	09 c0       	rjmp	.+18     	; 0x9f6 <__stack+0xf7>
     9e4:	55 20       	and	r5, r5
     9e6:	39 f0       	breq	.+14     	; 0x9f6 <__stack+0xf7>
     9e8:	b7 01       	movw	r22, r14
     9ea:	80 e3       	ldi	r24, 0x30	; 48
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     9f2:	5a 94       	dec	r5
     9f4:	f7 cf       	rjmp	.-18     	; 0x9e4 <__stack+0xe5>
     9f6:	97 fe       	sbrs	r9, 7
     9f8:	4c c0       	rjmp	.+152    	; 0xa92 <__stack+0x193>
     9fa:	46 01       	movw	r8, r12
     9fc:	d7 fe       	sbrs	r13, 7
     9fe:	02 c0       	rjmp	.+4      	; 0xa04 <__stack+0x105>
     a00:	81 2c       	mov	r8, r1
     a02:	91 2c       	mov	r9, r1
     a04:	c6 01       	movw	r24, r12
     a06:	88 19       	sub	r24, r8
     a08:	99 09       	sbc	r25, r9
     a0a:	f3 01       	movw	r30, r6
     a0c:	e8 0f       	add	r30, r24
     a0e:	f9 1f       	adc	r31, r25
     a10:	fe 87       	std	Y+14, r31	; 0x0e
     a12:	ed 87       	std	Y+13, r30	; 0x0d
     a14:	96 01       	movw	r18, r12
     a16:	24 19       	sub	r18, r4
     a18:	31 09       	sbc	r19, r1
     a1a:	38 8b       	std	Y+16, r19	; 0x10
     a1c:	2f 87       	std	Y+15, r18	; 0x0f
     a1e:	01 2f       	mov	r16, r17
     a20:	10 e0       	ldi	r17, 0x00	; 0
     a22:	11 95       	neg	r17
     a24:	01 95       	neg	r16
     a26:	11 09       	sbc	r17, r1
     a28:	3f ef       	ldi	r19, 0xFF	; 255
     a2a:	83 16       	cp	r8, r19
     a2c:	93 06       	cpc	r9, r19
     a2e:	29 f4       	brne	.+10     	; 0xa3a <__stack+0x13b>
     a30:	b7 01       	movw	r22, r14
     a32:	8e e2       	ldi	r24, 0x2E	; 46
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     a3a:	c8 14       	cp	r12, r8
     a3c:	d9 04       	cpc	r13, r9
     a3e:	4c f0       	brlt	.+18     	; 0xa52 <__stack+0x153>
     a40:	8f 85       	ldd	r24, Y+15	; 0x0f
     a42:	98 89       	ldd	r25, Y+16	; 0x10
     a44:	88 15       	cp	r24, r8
     a46:	99 05       	cpc	r25, r9
     a48:	24 f4       	brge	.+8      	; 0xa52 <__stack+0x153>
     a4a:	ed 85       	ldd	r30, Y+13	; 0x0d
     a4c:	fe 85       	ldd	r31, Y+14	; 0x0e
     a4e:	81 81       	ldd	r24, Z+1	; 0x01
     a50:	01 c0       	rjmp	.+2      	; 0xa54 <__stack+0x155>
     a52:	80 e3       	ldi	r24, 0x30	; 48
     a54:	f1 e0       	ldi	r31, 0x01	; 1
     a56:	8f 1a       	sub	r8, r31
     a58:	91 08       	sbc	r9, r1
     a5a:	2d 85       	ldd	r18, Y+13	; 0x0d
     a5c:	3e 85       	ldd	r19, Y+14	; 0x0e
     a5e:	2f 5f       	subi	r18, 0xFF	; 255
     a60:	3f 4f       	sbci	r19, 0xFF	; 255
     a62:	3e 87       	std	Y+14, r19	; 0x0e
     a64:	2d 87       	std	Y+13, r18	; 0x0d
     a66:	80 16       	cp	r8, r16
     a68:	91 06       	cpc	r9, r17
     a6a:	2c f0       	brlt	.+10     	; 0xa76 <__stack+0x177>
     a6c:	b7 01       	movw	r22, r14
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     a74:	d9 cf       	rjmp	.-78     	; 0xa28 <__stack+0x129>
     a76:	c8 14       	cp	r12, r8
     a78:	d9 04       	cpc	r13, r9
     a7a:	41 f4       	brne	.+16     	; 0xa8c <__stack+0x18d>
     a7c:	9a 81       	ldd	r25, Y+2	; 0x02
     a7e:	96 33       	cpi	r25, 0x36	; 54
     a80:	20 f4       	brcc	.+8      	; 0xa8a <__stack+0x18b>
     a82:	95 33       	cpi	r25, 0x35	; 53
     a84:	19 f4       	brne	.+6      	; 0xa8c <__stack+0x18d>
     a86:	3c 85       	ldd	r19, Y+12	; 0x0c
     a88:	34 ff       	sbrs	r19, 4
     a8a:	81 e3       	ldi	r24, 0x31	; 49
     a8c:	b7 01       	movw	r22, r14
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	4e c0       	rjmp	.+156    	; 0xb2e <__stack+0x22f>
     a92:	8a 81       	ldd	r24, Y+2	; 0x02
     a94:	81 33       	cpi	r24, 0x31	; 49
     a96:	19 f0       	breq	.+6      	; 0xa9e <__stack+0x19f>
     a98:	9c 85       	ldd	r25, Y+12	; 0x0c
     a9a:	9f 7e       	andi	r25, 0xEF	; 239
     a9c:	9c 87       	std	Y+12, r25	; 0x0c
     a9e:	b7 01       	movw	r22, r14
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     aa6:	11 11       	cpse	r17, r1
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <__stack+0x1b5>
     aaa:	94 fc       	sbrc	r9, 4
     aac:	18 c0       	rjmp	.+48     	; 0xade <__stack+0x1df>
     aae:	85 e6       	ldi	r24, 0x65	; 101
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	17 c0       	rjmp	.+46     	; 0xae2 <__stack+0x1e3>
     ab4:	b7 01       	movw	r22, r14
     ab6:	8e e2       	ldi	r24, 0x2E	; 46
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     abe:	1e 5f       	subi	r17, 0xFE	; 254
     ac0:	82 e0       	ldi	r24, 0x02	; 2
     ac2:	01 e0       	ldi	r16, 0x01	; 1
     ac4:	08 0f       	add	r16, r24
     ac6:	f3 01       	movw	r30, r6
     ac8:	e8 0f       	add	r30, r24
     aca:	f1 1d       	adc	r31, r1
     acc:	80 81       	ld	r24, Z
     ace:	b7 01       	movw	r22, r14
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     ad6:	80 2f       	mov	r24, r16
     ad8:	01 13       	cpse	r16, r17
     ada:	f3 cf       	rjmp	.-26     	; 0xac2 <__stack+0x1c3>
     adc:	e6 cf       	rjmp	.-52     	; 0xaaa <__stack+0x1ab>
     ade:	85 e4       	ldi	r24, 0x45	; 69
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	b7 01       	movw	r22, r14
     ae4:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     ae8:	d7 fc       	sbrc	r13, 7
     aea:	06 c0       	rjmp	.+12     	; 0xaf8 <__stack+0x1f9>
     aec:	c1 14       	cp	r12, r1
     aee:	d1 04       	cpc	r13, r1
     af0:	41 f4       	brne	.+16     	; 0xb02 <__stack+0x203>
     af2:	ec 85       	ldd	r30, Y+12	; 0x0c
     af4:	e4 ff       	sbrs	r30, 4
     af6:	05 c0       	rjmp	.+10     	; 0xb02 <__stack+0x203>
     af8:	d1 94       	neg	r13
     afa:	c1 94       	neg	r12
     afc:	d1 08       	sbc	r13, r1
     afe:	8d e2       	ldi	r24, 0x2D	; 45
     b00:	01 c0       	rjmp	.+2      	; 0xb04 <__stack+0x205>
     b02:	8b e2       	ldi	r24, 0x2B	; 43
     b04:	b7 01       	movw	r22, r14
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     b0c:	80 e3       	ldi	r24, 0x30	; 48
     b0e:	2a e0       	ldi	r18, 0x0A	; 10
     b10:	c2 16       	cp	r12, r18
     b12:	d1 04       	cpc	r13, r1
     b14:	2c f0       	brlt	.+10     	; 0xb20 <__stack+0x221>
     b16:	8f 5f       	subi	r24, 0xFF	; 255
     b18:	fa e0       	ldi	r31, 0x0A	; 10
     b1a:	cf 1a       	sub	r12, r31
     b1c:	d1 08       	sbc	r13, r1
     b1e:	f7 cf       	rjmp	.-18     	; 0xb0e <__stack+0x20f>
     b20:	b7 01       	movw	r22, r14
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     b28:	b7 01       	movw	r22, r14
     b2a:	c6 01       	movw	r24, r12
     b2c:	c0 96       	adiw	r24, 0x30	; 48
     b2e:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     b32:	54 c1       	rjmp	.+680    	; 0xddc <__stack+0x4dd>
     b34:	83 36       	cpi	r24, 0x63	; 99
     b36:	31 f0       	breq	.+12     	; 0xb44 <__stack+0x245>
     b38:	83 37       	cpi	r24, 0x73	; 115
     b3a:	79 f0       	breq	.+30     	; 0xb5a <__stack+0x25b>
     b3c:	83 35       	cpi	r24, 0x53	; 83
     b3e:	09 f0       	breq	.+2      	; 0xb42 <__stack+0x243>
     b40:	56 c0       	rjmp	.+172    	; 0xbee <__stack+0x2ef>
     b42:	20 c0       	rjmp	.+64     	; 0xb84 <__stack+0x285>
     b44:	56 01       	movw	r10, r12
     b46:	32 e0       	ldi	r19, 0x02	; 2
     b48:	a3 0e       	add	r10, r19
     b4a:	b1 1c       	adc	r11, r1
     b4c:	f6 01       	movw	r30, r12
     b4e:	80 81       	ld	r24, Z
     b50:	89 83       	std	Y+1, r24	; 0x01
     b52:	01 e0       	ldi	r16, 0x01	; 1
     b54:	10 e0       	ldi	r17, 0x00	; 0
     b56:	63 01       	movw	r12, r6
     b58:	12 c0       	rjmp	.+36     	; 0xb7e <__stack+0x27f>
     b5a:	56 01       	movw	r10, r12
     b5c:	f2 e0       	ldi	r31, 0x02	; 2
     b5e:	af 0e       	add	r10, r31
     b60:	b1 1c       	adc	r11, r1
     b62:	f6 01       	movw	r30, r12
     b64:	c0 80       	ld	r12, Z
     b66:	d1 80       	ldd	r13, Z+1	; 0x01
     b68:	96 fe       	sbrs	r9, 6
     b6a:	03 c0       	rjmp	.+6      	; 0xb72 <__stack+0x273>
     b6c:	61 2f       	mov	r22, r17
     b6e:	70 e0       	ldi	r23, 0x00	; 0
     b70:	02 c0       	rjmp	.+4      	; 0xb76 <__stack+0x277>
     b72:	6f ef       	ldi	r22, 0xFF	; 255
     b74:	7f ef       	ldi	r23, 0xFF	; 255
     b76:	c6 01       	movw	r24, r12
     b78:	0e 94 46 08 	call	0x108c	; 0x108c <strnlen>
     b7c:	8c 01       	movw	r16, r24
     b7e:	f9 2d       	mov	r31, r9
     b80:	ff 77       	andi	r31, 0x7F	; 127
     b82:	14 c0       	rjmp	.+40     	; 0xbac <__stack+0x2ad>
     b84:	56 01       	movw	r10, r12
     b86:	22 e0       	ldi	r18, 0x02	; 2
     b88:	a2 0e       	add	r10, r18
     b8a:	b1 1c       	adc	r11, r1
     b8c:	f6 01       	movw	r30, r12
     b8e:	c0 80       	ld	r12, Z
     b90:	d1 80       	ldd	r13, Z+1	; 0x01
     b92:	96 fe       	sbrs	r9, 6
     b94:	03 c0       	rjmp	.+6      	; 0xb9c <__stack+0x29d>
     b96:	61 2f       	mov	r22, r17
     b98:	70 e0       	ldi	r23, 0x00	; 0
     b9a:	02 c0       	rjmp	.+4      	; 0xba0 <__stack+0x2a1>
     b9c:	6f ef       	ldi	r22, 0xFF	; 255
     b9e:	7f ef       	ldi	r23, 0xFF	; 255
     ba0:	c6 01       	movw	r24, r12
     ba2:	0e 94 3b 08 	call	0x1076	; 0x1076 <strnlen_P>
     ba6:	8c 01       	movw	r16, r24
     ba8:	f9 2d       	mov	r31, r9
     baa:	f0 68       	ori	r31, 0x80	; 128
     bac:	9f 2e       	mov	r9, r31
     bae:	f3 fd       	sbrc	r31, 3
     bb0:	1a c0       	rjmp	.+52     	; 0xbe6 <__stack+0x2e7>
     bb2:	85 2d       	mov	r24, r5
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	08 17       	cp	r16, r24
     bb8:	19 07       	cpc	r17, r25
     bba:	a8 f4       	brcc	.+42     	; 0xbe6 <__stack+0x2e7>
     bbc:	b7 01       	movw	r22, r14
     bbe:	80 e2       	ldi	r24, 0x20	; 32
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     bc6:	5a 94       	dec	r5
     bc8:	f4 cf       	rjmp	.-24     	; 0xbb2 <__stack+0x2b3>
     bca:	f6 01       	movw	r30, r12
     bcc:	97 fc       	sbrc	r9, 7
     bce:	85 91       	lpm	r24, Z+
     bd0:	97 fe       	sbrs	r9, 7
     bd2:	81 91       	ld	r24, Z+
     bd4:	6f 01       	movw	r12, r30
     bd6:	b7 01       	movw	r22, r14
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     bde:	51 10       	cpse	r5, r1
     be0:	5a 94       	dec	r5
     be2:	01 50       	subi	r16, 0x01	; 1
     be4:	11 09       	sbc	r17, r1
     be6:	01 15       	cp	r16, r1
     be8:	11 05       	cpc	r17, r1
     bea:	79 f7       	brne	.-34     	; 0xbca <__stack+0x2cb>
     bec:	f7 c0       	rjmp	.+494    	; 0xddc <__stack+0x4dd>
     bee:	84 36       	cpi	r24, 0x64	; 100
     bf0:	11 f0       	breq	.+4      	; 0xbf6 <__stack+0x2f7>
     bf2:	89 36       	cpi	r24, 0x69	; 105
     bf4:	61 f5       	brne	.+88     	; 0xc4e <__stack+0x34f>
     bf6:	56 01       	movw	r10, r12
     bf8:	97 fe       	sbrs	r9, 7
     bfa:	09 c0       	rjmp	.+18     	; 0xc0e <__stack+0x30f>
     bfc:	24 e0       	ldi	r18, 0x04	; 4
     bfe:	a2 0e       	add	r10, r18
     c00:	b1 1c       	adc	r11, r1
     c02:	f6 01       	movw	r30, r12
     c04:	60 81       	ld	r22, Z
     c06:	71 81       	ldd	r23, Z+1	; 0x01
     c08:	82 81       	ldd	r24, Z+2	; 0x02
     c0a:	93 81       	ldd	r25, Z+3	; 0x03
     c0c:	0a c0       	rjmp	.+20     	; 0xc22 <__stack+0x323>
     c0e:	f2 e0       	ldi	r31, 0x02	; 2
     c10:	af 0e       	add	r10, r31
     c12:	b1 1c       	adc	r11, r1
     c14:	f6 01       	movw	r30, r12
     c16:	60 81       	ld	r22, Z
     c18:	71 81       	ldd	r23, Z+1	; 0x01
     c1a:	07 2e       	mov	r0, r23
     c1c:	00 0c       	add	r0, r0
     c1e:	88 0b       	sbc	r24, r24
     c20:	99 0b       	sbc	r25, r25
     c22:	f9 2d       	mov	r31, r9
     c24:	ff 76       	andi	r31, 0x6F	; 111
     c26:	9f 2e       	mov	r9, r31
     c28:	97 ff       	sbrs	r25, 7
     c2a:	09 c0       	rjmp	.+18     	; 0xc3e <__stack+0x33f>
     c2c:	90 95       	com	r25
     c2e:	80 95       	com	r24
     c30:	70 95       	com	r23
     c32:	61 95       	neg	r22
     c34:	7f 4f       	sbci	r23, 0xFF	; 255
     c36:	8f 4f       	sbci	r24, 0xFF	; 255
     c38:	9f 4f       	sbci	r25, 0xFF	; 255
     c3a:	f0 68       	ori	r31, 0x80	; 128
     c3c:	9f 2e       	mov	r9, r31
     c3e:	2a e0       	ldi	r18, 0x0A	; 10
     c40:	30 e0       	ldi	r19, 0x00	; 0
     c42:	a3 01       	movw	r20, r6
     c44:	0e 94 8d 08 	call	0x111a	; 0x111a <__ultoa_invert>
     c48:	c8 2e       	mov	r12, r24
     c4a:	c6 18       	sub	r12, r6
     c4c:	3f c0       	rjmp	.+126    	; 0xccc <__stack+0x3cd>
     c4e:	09 2d       	mov	r16, r9
     c50:	85 37       	cpi	r24, 0x75	; 117
     c52:	21 f4       	brne	.+8      	; 0xc5c <__stack+0x35d>
     c54:	0f 7e       	andi	r16, 0xEF	; 239
     c56:	2a e0       	ldi	r18, 0x0A	; 10
     c58:	30 e0       	ldi	r19, 0x00	; 0
     c5a:	1d c0       	rjmp	.+58     	; 0xc96 <__stack+0x397>
     c5c:	09 7f       	andi	r16, 0xF9	; 249
     c5e:	8f 36       	cpi	r24, 0x6F	; 111
     c60:	91 f0       	breq	.+36     	; 0xc86 <__stack+0x387>
     c62:	18 f4       	brcc	.+6      	; 0xc6a <__stack+0x36b>
     c64:	88 35       	cpi	r24, 0x58	; 88
     c66:	59 f0       	breq	.+22     	; 0xc7e <__stack+0x37f>
     c68:	c3 c0       	rjmp	.+390    	; 0xdf0 <__stack+0x4f1>
     c6a:	80 37       	cpi	r24, 0x70	; 112
     c6c:	19 f0       	breq	.+6      	; 0xc74 <__stack+0x375>
     c6e:	88 37       	cpi	r24, 0x78	; 120
     c70:	11 f0       	breq	.+4      	; 0xc76 <__stack+0x377>
     c72:	be c0       	rjmp	.+380    	; 0xdf0 <__stack+0x4f1>
     c74:	00 61       	ori	r16, 0x10	; 16
     c76:	04 ff       	sbrs	r16, 4
     c78:	09 c0       	rjmp	.+18     	; 0xc8c <__stack+0x38d>
     c7a:	04 60       	ori	r16, 0x04	; 4
     c7c:	07 c0       	rjmp	.+14     	; 0xc8c <__stack+0x38d>
     c7e:	94 fe       	sbrs	r9, 4
     c80:	08 c0       	rjmp	.+16     	; 0xc92 <__stack+0x393>
     c82:	06 60       	ori	r16, 0x06	; 6
     c84:	06 c0       	rjmp	.+12     	; 0xc92 <__stack+0x393>
     c86:	28 e0       	ldi	r18, 0x08	; 8
     c88:	30 e0       	ldi	r19, 0x00	; 0
     c8a:	05 c0       	rjmp	.+10     	; 0xc96 <__stack+0x397>
     c8c:	20 e1       	ldi	r18, 0x10	; 16
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <__stack+0x397>
     c92:	20 e1       	ldi	r18, 0x10	; 16
     c94:	32 e0       	ldi	r19, 0x02	; 2
     c96:	56 01       	movw	r10, r12
     c98:	07 ff       	sbrs	r16, 7
     c9a:	09 c0       	rjmp	.+18     	; 0xcae <__stack+0x3af>
     c9c:	84 e0       	ldi	r24, 0x04	; 4
     c9e:	a8 0e       	add	r10, r24
     ca0:	b1 1c       	adc	r11, r1
     ca2:	f6 01       	movw	r30, r12
     ca4:	60 81       	ld	r22, Z
     ca6:	71 81       	ldd	r23, Z+1	; 0x01
     ca8:	82 81       	ldd	r24, Z+2	; 0x02
     caa:	93 81       	ldd	r25, Z+3	; 0x03
     cac:	08 c0       	rjmp	.+16     	; 0xcbe <__stack+0x3bf>
     cae:	f2 e0       	ldi	r31, 0x02	; 2
     cb0:	af 0e       	add	r10, r31
     cb2:	b1 1c       	adc	r11, r1
     cb4:	f6 01       	movw	r30, r12
     cb6:	60 81       	ld	r22, Z
     cb8:	71 81       	ldd	r23, Z+1	; 0x01
     cba:	80 e0       	ldi	r24, 0x00	; 0
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	a3 01       	movw	r20, r6
     cc0:	0e 94 8d 08 	call	0x111a	; 0x111a <__ultoa_invert>
     cc4:	c8 2e       	mov	r12, r24
     cc6:	c6 18       	sub	r12, r6
     cc8:	0f 77       	andi	r16, 0x7F	; 127
     cca:	90 2e       	mov	r9, r16
     ccc:	96 fe       	sbrs	r9, 6
     cce:	0b c0       	rjmp	.+22     	; 0xce6 <__stack+0x3e7>
     cd0:	09 2d       	mov	r16, r9
     cd2:	0e 7f       	andi	r16, 0xFE	; 254
     cd4:	c1 16       	cp	r12, r17
     cd6:	50 f4       	brcc	.+20     	; 0xcec <__stack+0x3ed>
     cd8:	94 fe       	sbrs	r9, 4
     cda:	0a c0       	rjmp	.+20     	; 0xcf0 <__stack+0x3f1>
     cdc:	92 fc       	sbrc	r9, 2
     cde:	08 c0       	rjmp	.+16     	; 0xcf0 <__stack+0x3f1>
     ce0:	09 2d       	mov	r16, r9
     ce2:	0e 7e       	andi	r16, 0xEE	; 238
     ce4:	05 c0       	rjmp	.+10     	; 0xcf0 <__stack+0x3f1>
     ce6:	dc 2c       	mov	r13, r12
     ce8:	09 2d       	mov	r16, r9
     cea:	03 c0       	rjmp	.+6      	; 0xcf2 <__stack+0x3f3>
     cec:	dc 2c       	mov	r13, r12
     cee:	01 c0       	rjmp	.+2      	; 0xcf2 <__stack+0x3f3>
     cf0:	d1 2e       	mov	r13, r17
     cf2:	04 ff       	sbrs	r16, 4
     cf4:	0d c0       	rjmp	.+26     	; 0xd10 <__stack+0x411>
     cf6:	fe 01       	movw	r30, r28
     cf8:	ec 0d       	add	r30, r12
     cfa:	f1 1d       	adc	r31, r1
     cfc:	80 81       	ld	r24, Z
     cfe:	80 33       	cpi	r24, 0x30	; 48
     d00:	11 f4       	brne	.+4      	; 0xd06 <__stack+0x407>
     d02:	09 7e       	andi	r16, 0xE9	; 233
     d04:	09 c0       	rjmp	.+18     	; 0xd18 <__stack+0x419>
     d06:	02 ff       	sbrs	r16, 2
     d08:	06 c0       	rjmp	.+12     	; 0xd16 <__stack+0x417>
     d0a:	d3 94       	inc	r13
     d0c:	d3 94       	inc	r13
     d0e:	04 c0       	rjmp	.+8      	; 0xd18 <__stack+0x419>
     d10:	80 2f       	mov	r24, r16
     d12:	86 78       	andi	r24, 0x86	; 134
     d14:	09 f0       	breq	.+2      	; 0xd18 <__stack+0x419>
     d16:	d3 94       	inc	r13
     d18:	03 fd       	sbrc	r16, 3
     d1a:	11 c0       	rjmp	.+34     	; 0xd3e <__stack+0x43f>
     d1c:	00 ff       	sbrs	r16, 0
     d1e:	06 c0       	rjmp	.+12     	; 0xd2c <__stack+0x42d>
     d20:	1c 2d       	mov	r17, r12
     d22:	d5 14       	cp	r13, r5
     d24:	80 f4       	brcc	.+32     	; 0xd46 <__stack+0x447>
     d26:	15 0d       	add	r17, r5
     d28:	1d 19       	sub	r17, r13
     d2a:	0d c0       	rjmp	.+26     	; 0xd46 <__stack+0x447>
     d2c:	d5 14       	cp	r13, r5
     d2e:	58 f4       	brcc	.+22     	; 0xd46 <__stack+0x447>
     d30:	b7 01       	movw	r22, r14
     d32:	80 e2       	ldi	r24, 0x20	; 32
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     d3a:	d3 94       	inc	r13
     d3c:	f7 cf       	rjmp	.-18     	; 0xd2c <__stack+0x42d>
     d3e:	d5 14       	cp	r13, r5
     d40:	10 f4       	brcc	.+4      	; 0xd46 <__stack+0x447>
     d42:	5d 18       	sub	r5, r13
     d44:	01 c0       	rjmp	.+2      	; 0xd48 <__stack+0x449>
     d46:	51 2c       	mov	r5, r1
     d48:	04 ff       	sbrs	r16, 4
     d4a:	10 c0       	rjmp	.+32     	; 0xd6c <__stack+0x46d>
     d4c:	b7 01       	movw	r22, r14
     d4e:	80 e3       	ldi	r24, 0x30	; 48
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     d56:	02 ff       	sbrs	r16, 2
     d58:	17 c0       	rjmp	.+46     	; 0xd88 <__stack+0x489>
     d5a:	01 fd       	sbrc	r16, 1
     d5c:	03 c0       	rjmp	.+6      	; 0xd64 <__stack+0x465>
     d5e:	88 e7       	ldi	r24, 0x78	; 120
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <__stack+0x469>
     d64:	88 e5       	ldi	r24, 0x58	; 88
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	b7 01       	movw	r22, r14
     d6a:	0c c0       	rjmp	.+24     	; 0xd84 <__stack+0x485>
     d6c:	80 2f       	mov	r24, r16
     d6e:	86 78       	andi	r24, 0x86	; 134
     d70:	59 f0       	breq	.+22     	; 0xd88 <__stack+0x489>
     d72:	01 ff       	sbrs	r16, 1
     d74:	02 c0       	rjmp	.+4      	; 0xd7a <__stack+0x47b>
     d76:	8b e2       	ldi	r24, 0x2B	; 43
     d78:	01 c0       	rjmp	.+2      	; 0xd7c <__stack+0x47d>
     d7a:	80 e2       	ldi	r24, 0x20	; 32
     d7c:	07 fd       	sbrc	r16, 7
     d7e:	8d e2       	ldi	r24, 0x2D	; 45
     d80:	b7 01       	movw	r22, r14
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     d88:	c1 16       	cp	r12, r17
     d8a:	38 f4       	brcc	.+14     	; 0xd9a <__stack+0x49b>
     d8c:	b7 01       	movw	r22, r14
     d8e:	80 e3       	ldi	r24, 0x30	; 48
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     d96:	11 50       	subi	r17, 0x01	; 1
     d98:	f7 cf       	rjmp	.-18     	; 0xd88 <__stack+0x489>
     d9a:	ca 94       	dec	r12
     d9c:	f3 01       	movw	r30, r6
     d9e:	ec 0d       	add	r30, r12
     da0:	f1 1d       	adc	r31, r1
     da2:	80 81       	ld	r24, Z
     da4:	b7 01       	movw	r22, r14
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     dac:	c1 10       	cpse	r12, r1
     dae:	f5 cf       	rjmp	.-22     	; 0xd9a <__stack+0x49b>
     db0:	15 c0       	rjmp	.+42     	; 0xddc <__stack+0x4dd>
     db2:	f4 e0       	ldi	r31, 0x04	; 4
     db4:	f5 15       	cp	r31, r5
     db6:	60 f5       	brcc	.+88     	; 0xe10 <__stack+0x511>
     db8:	84 e0       	ldi	r24, 0x04	; 4
     dba:	58 1a       	sub	r5, r24
     dbc:	93 fe       	sbrs	r9, 3
     dbe:	1f c0       	rjmp	.+62     	; 0xdfe <__stack+0x4ff>
     dc0:	01 11       	cpse	r16, r1
     dc2:	27 c0       	rjmp	.+78     	; 0xe12 <__stack+0x513>
     dc4:	2c 85       	ldd	r18, Y+12	; 0x0c
     dc6:	23 ff       	sbrs	r18, 3
     dc8:	2a c0       	rjmp	.+84     	; 0xe1e <__stack+0x51f>
     dca:	0a ef       	ldi	r16, 0xFA	; 250
     dcc:	11 e0       	ldi	r17, 0x01	; 1
     dce:	39 2d       	mov	r19, r9
     dd0:	30 71       	andi	r19, 0x10	; 16
     dd2:	93 2e       	mov	r9, r19
     dd4:	f8 01       	movw	r30, r16
     dd6:	84 91       	lpm	r24, Z
     dd8:	81 11       	cpse	r24, r1
     dda:	24 c0       	rjmp	.+72     	; 0xe24 <__stack+0x525>
     ddc:	55 20       	and	r5, r5
     dde:	09 f4       	brne	.+2      	; 0xde2 <__stack+0x4e3>
     de0:	e4 cc       	rjmp	.-1592   	; 0x7aa <vfprintf+0x58>
     de2:	b7 01       	movw	r22, r14
     de4:	80 e2       	ldi	r24, 0x20	; 32
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     dec:	5a 94       	dec	r5
     dee:	f6 cf       	rjmp	.-20     	; 0xddc <__stack+0x4dd>
     df0:	f7 01       	movw	r30, r14
     df2:	86 81       	ldd	r24, Z+6	; 0x06
     df4:	97 81       	ldd	r25, Z+7	; 0x07
     df6:	26 c0       	rjmp	.+76     	; 0xe44 <__stack+0x545>
     df8:	8f ef       	ldi	r24, 0xFF	; 255
     dfa:	9f ef       	ldi	r25, 0xFF	; 255
     dfc:	23 c0       	rjmp	.+70     	; 0xe44 <__stack+0x545>
     dfe:	b7 01       	movw	r22, r14
     e00:	80 e2       	ldi	r24, 0x20	; 32
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     e08:	5a 94       	dec	r5
     e0a:	51 10       	cpse	r5, r1
     e0c:	f8 cf       	rjmp	.-16     	; 0xdfe <__stack+0x4ff>
     e0e:	d8 cf       	rjmp	.-80     	; 0xdc0 <__stack+0x4c1>
     e10:	51 2c       	mov	r5, r1
     e12:	b7 01       	movw	r22, r14
     e14:	80 2f       	mov	r24, r16
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     e1c:	d3 cf       	rjmp	.-90     	; 0xdc4 <__stack+0x4c5>
     e1e:	0e ef       	ldi	r16, 0xFE	; 254
     e20:	11 e0       	ldi	r17, 0x01	; 1
     e22:	d5 cf       	rjmp	.-86     	; 0xdce <__stack+0x4cf>
     e24:	91 10       	cpse	r9, r1
     e26:	80 52       	subi	r24, 0x20	; 32
     e28:	b7 01       	movw	r22, r14
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	0e 94 51 08 	call	0x10a2	; 0x10a2 <fputc>
     e30:	0f 5f       	subi	r16, 0xFF	; 255
     e32:	1f 4f       	sbci	r17, 0xFF	; 255
     e34:	cf cf       	rjmp	.-98     	; 0xdd4 <__stack+0x4d5>
     e36:	23 e0       	ldi	r18, 0x03	; 3
     e38:	25 15       	cp	r18, r5
     e3a:	10 f4       	brcc	.+4      	; 0xe40 <__stack+0x541>
     e3c:	83 e0       	ldi	r24, 0x03	; 3
     e3e:	bd cf       	rjmp	.-134    	; 0xdba <__stack+0x4bb>
     e40:	51 2c       	mov	r5, r1
     e42:	c0 cf       	rjmp	.-128    	; 0xdc4 <__stack+0x4c5>
     e44:	60 96       	adiw	r28, 0x10	; 16
     e46:	e2 e1       	ldi	r30, 0x12	; 18
     e48:	0c 94 48 07 	jmp	0xe90	; 0xe90 <__epilogue_restores__>

00000e4c <__tablejump2__>:
     e4c:	ee 0f       	add	r30, r30
     e4e:	ff 1f       	adc	r31, r31
     e50:	05 90       	lpm	r0, Z+
     e52:	f4 91       	lpm	r31, Z
     e54:	e0 2d       	mov	r30, r0
     e56:	09 94       	ijmp

00000e58 <__prologue_saves__>:
     e58:	2f 92       	push	r2
     e5a:	3f 92       	push	r3
     e5c:	4f 92       	push	r4
     e5e:	5f 92       	push	r5
     e60:	6f 92       	push	r6
     e62:	7f 92       	push	r7
     e64:	8f 92       	push	r8
     e66:	9f 92       	push	r9
     e68:	af 92       	push	r10
     e6a:	bf 92       	push	r11
     e6c:	cf 92       	push	r12
     e6e:	df 92       	push	r13
     e70:	ef 92       	push	r14
     e72:	ff 92       	push	r15
     e74:	0f 93       	push	r16
     e76:	1f 93       	push	r17
     e78:	cf 93       	push	r28
     e7a:	df 93       	push	r29
     e7c:	cd b7       	in	r28, 0x3d	; 61
     e7e:	de b7       	in	r29, 0x3e	; 62
     e80:	ca 1b       	sub	r28, r26
     e82:	db 0b       	sbc	r29, r27
     e84:	0f b6       	in	r0, 0x3f	; 63
     e86:	f8 94       	cli
     e88:	de bf       	out	0x3e, r29	; 62
     e8a:	0f be       	out	0x3f, r0	; 63
     e8c:	cd bf       	out	0x3d, r28	; 61
     e8e:	09 94       	ijmp

00000e90 <__epilogue_restores__>:
     e90:	2a 88       	ldd	r2, Y+18	; 0x12
     e92:	39 88       	ldd	r3, Y+17	; 0x11
     e94:	48 88       	ldd	r4, Y+16	; 0x10
     e96:	5f 84       	ldd	r5, Y+15	; 0x0f
     e98:	6e 84       	ldd	r6, Y+14	; 0x0e
     e9a:	7d 84       	ldd	r7, Y+13	; 0x0d
     e9c:	8c 84       	ldd	r8, Y+12	; 0x0c
     e9e:	9b 84       	ldd	r9, Y+11	; 0x0b
     ea0:	aa 84       	ldd	r10, Y+10	; 0x0a
     ea2:	b9 84       	ldd	r11, Y+9	; 0x09
     ea4:	c8 84       	ldd	r12, Y+8	; 0x08
     ea6:	df 80       	ldd	r13, Y+7	; 0x07
     ea8:	ee 80       	ldd	r14, Y+6	; 0x06
     eaa:	fd 80       	ldd	r15, Y+5	; 0x05
     eac:	0c 81       	ldd	r16, Y+4	; 0x04
     eae:	1b 81       	ldd	r17, Y+3	; 0x03
     eb0:	aa 81       	ldd	r26, Y+2	; 0x02
     eb2:	b9 81       	ldd	r27, Y+1	; 0x01
     eb4:	ce 0f       	add	r28, r30
     eb6:	d1 1d       	adc	r29, r1
     eb8:	0f b6       	in	r0, 0x3f	; 63
     eba:	f8 94       	cli
     ebc:	de bf       	out	0x3e, r29	; 62
     ebe:	0f be       	out	0x3f, r0	; 63
     ec0:	cd bf       	out	0x3d, r28	; 61
     ec2:	ed 01       	movw	r28, r26
     ec4:	08 95       	ret

00000ec6 <__ftoa_engine>:
     ec6:	28 30       	cpi	r18, 0x08	; 8
     ec8:	08 f0       	brcs	.+2      	; 0xecc <__ftoa_engine+0x6>
     eca:	27 e0       	ldi	r18, 0x07	; 7
     ecc:	33 27       	eor	r19, r19
     ece:	da 01       	movw	r26, r20
     ed0:	99 0f       	add	r25, r25
     ed2:	31 1d       	adc	r19, r1
     ed4:	87 fd       	sbrc	r24, 7
     ed6:	91 60       	ori	r25, 0x01	; 1
     ed8:	00 96       	adiw	r24, 0x00	; 0
     eda:	61 05       	cpc	r22, r1
     edc:	71 05       	cpc	r23, r1
     ede:	39 f4       	brne	.+14     	; 0xeee <__ftoa_engine+0x28>
     ee0:	32 60       	ori	r19, 0x02	; 2
     ee2:	2e 5f       	subi	r18, 0xFE	; 254
     ee4:	3d 93       	st	X+, r19
     ee6:	30 e3       	ldi	r19, 0x30	; 48
     ee8:	2a 95       	dec	r18
     eea:	e1 f7       	brne	.-8      	; 0xee4 <__ftoa_engine+0x1e>
     eec:	08 95       	ret
     eee:	9f 3f       	cpi	r25, 0xFF	; 255
     ef0:	30 f0       	brcs	.+12     	; 0xefe <__ftoa_engine+0x38>
     ef2:	80 38       	cpi	r24, 0x80	; 128
     ef4:	71 05       	cpc	r23, r1
     ef6:	61 05       	cpc	r22, r1
     ef8:	09 f0       	breq	.+2      	; 0xefc <__ftoa_engine+0x36>
     efa:	3c 5f       	subi	r19, 0xFC	; 252
     efc:	3c 5f       	subi	r19, 0xFC	; 252
     efe:	3d 93       	st	X+, r19
     f00:	91 30       	cpi	r25, 0x01	; 1
     f02:	08 f0       	brcs	.+2      	; 0xf06 <__ftoa_engine+0x40>
     f04:	80 68       	ori	r24, 0x80	; 128
     f06:	91 1d       	adc	r25, r1
     f08:	df 93       	push	r29
     f0a:	cf 93       	push	r28
     f0c:	1f 93       	push	r17
     f0e:	0f 93       	push	r16
     f10:	ff 92       	push	r15
     f12:	ef 92       	push	r14
     f14:	19 2f       	mov	r17, r25
     f16:	98 7f       	andi	r25, 0xF8	; 248
     f18:	96 95       	lsr	r25
     f1a:	e9 2f       	mov	r30, r25
     f1c:	96 95       	lsr	r25
     f1e:	96 95       	lsr	r25
     f20:	e9 0f       	add	r30, r25
     f22:	ff 27       	eor	r31, r31
     f24:	e4 5a       	subi	r30, 0xA4	; 164
     f26:	fd 4f       	sbci	r31, 0xFD	; 253
     f28:	99 27       	eor	r25, r25
     f2a:	33 27       	eor	r19, r19
     f2c:	ee 24       	eor	r14, r14
     f2e:	ff 24       	eor	r15, r15
     f30:	a7 01       	movw	r20, r14
     f32:	e7 01       	movw	r28, r14
     f34:	05 90       	lpm	r0, Z+
     f36:	08 94       	sec
     f38:	07 94       	ror	r0
     f3a:	28 f4       	brcc	.+10     	; 0xf46 <__ftoa_engine+0x80>
     f3c:	36 0f       	add	r19, r22
     f3e:	e7 1e       	adc	r14, r23
     f40:	f8 1e       	adc	r15, r24
     f42:	49 1f       	adc	r20, r25
     f44:	51 1d       	adc	r21, r1
     f46:	66 0f       	add	r22, r22
     f48:	77 1f       	adc	r23, r23
     f4a:	88 1f       	adc	r24, r24
     f4c:	99 1f       	adc	r25, r25
     f4e:	06 94       	lsr	r0
     f50:	a1 f7       	brne	.-24     	; 0xf3a <__ftoa_engine+0x74>
     f52:	05 90       	lpm	r0, Z+
     f54:	07 94       	ror	r0
     f56:	28 f4       	brcc	.+10     	; 0xf62 <__ftoa_engine+0x9c>
     f58:	e7 0e       	add	r14, r23
     f5a:	f8 1e       	adc	r15, r24
     f5c:	49 1f       	adc	r20, r25
     f5e:	56 1f       	adc	r21, r22
     f60:	c1 1d       	adc	r28, r1
     f62:	77 0f       	add	r23, r23
     f64:	88 1f       	adc	r24, r24
     f66:	99 1f       	adc	r25, r25
     f68:	66 1f       	adc	r22, r22
     f6a:	06 94       	lsr	r0
     f6c:	a1 f7       	brne	.-24     	; 0xf56 <__ftoa_engine+0x90>
     f6e:	05 90       	lpm	r0, Z+
     f70:	07 94       	ror	r0
     f72:	28 f4       	brcc	.+10     	; 0xf7e <__ftoa_engine+0xb8>
     f74:	f8 0e       	add	r15, r24
     f76:	49 1f       	adc	r20, r25
     f78:	56 1f       	adc	r21, r22
     f7a:	c7 1f       	adc	r28, r23
     f7c:	d1 1d       	adc	r29, r1
     f7e:	88 0f       	add	r24, r24
     f80:	99 1f       	adc	r25, r25
     f82:	66 1f       	adc	r22, r22
     f84:	77 1f       	adc	r23, r23
     f86:	06 94       	lsr	r0
     f88:	a1 f7       	brne	.-24     	; 0xf72 <__ftoa_engine+0xac>
     f8a:	05 90       	lpm	r0, Z+
     f8c:	07 94       	ror	r0
     f8e:	20 f4       	brcc	.+8      	; 0xf98 <__ftoa_engine+0xd2>
     f90:	49 0f       	add	r20, r25
     f92:	56 1f       	adc	r21, r22
     f94:	c7 1f       	adc	r28, r23
     f96:	d8 1f       	adc	r29, r24
     f98:	99 0f       	add	r25, r25
     f9a:	66 1f       	adc	r22, r22
     f9c:	77 1f       	adc	r23, r23
     f9e:	88 1f       	adc	r24, r24
     fa0:	06 94       	lsr	r0
     fa2:	a9 f7       	brne	.-22     	; 0xf8e <__ftoa_engine+0xc8>
     fa4:	84 91       	lpm	r24, Z
     fa6:	10 95       	com	r17
     fa8:	17 70       	andi	r17, 0x07	; 7
     faa:	41 f0       	breq	.+16     	; 0xfbc <__ftoa_engine+0xf6>
     fac:	d6 95       	lsr	r29
     fae:	c7 95       	ror	r28
     fb0:	57 95       	ror	r21
     fb2:	47 95       	ror	r20
     fb4:	f7 94       	ror	r15
     fb6:	e7 94       	ror	r14
     fb8:	1a 95       	dec	r17
     fba:	c1 f7       	brne	.-16     	; 0xfac <__ftoa_engine+0xe6>
     fbc:	e2 e0       	ldi	r30, 0x02	; 2
     fbe:	f2 e0       	ldi	r31, 0x02	; 2
     fc0:	68 94       	set
     fc2:	15 90       	lpm	r1, Z+
     fc4:	15 91       	lpm	r17, Z+
     fc6:	35 91       	lpm	r19, Z+
     fc8:	65 91       	lpm	r22, Z+
     fca:	95 91       	lpm	r25, Z+
     fcc:	05 90       	lpm	r0, Z+
     fce:	7f e2       	ldi	r23, 0x2F	; 47
     fd0:	73 95       	inc	r23
     fd2:	e1 18       	sub	r14, r1
     fd4:	f1 0a       	sbc	r15, r17
     fd6:	43 0b       	sbc	r20, r19
     fd8:	56 0b       	sbc	r21, r22
     fda:	c9 0b       	sbc	r28, r25
     fdc:	d0 09       	sbc	r29, r0
     fde:	c0 f7       	brcc	.-16     	; 0xfd0 <__ftoa_engine+0x10a>
     fe0:	e1 0c       	add	r14, r1
     fe2:	f1 1e       	adc	r15, r17
     fe4:	43 1f       	adc	r20, r19
     fe6:	56 1f       	adc	r21, r22
     fe8:	c9 1f       	adc	r28, r25
     fea:	d0 1d       	adc	r29, r0
     fec:	7e f4       	brtc	.+30     	; 0x100c <__ftoa_engine+0x146>
     fee:	70 33       	cpi	r23, 0x30	; 48
     ff0:	11 f4       	brne	.+4      	; 0xff6 <__ftoa_engine+0x130>
     ff2:	8a 95       	dec	r24
     ff4:	e6 cf       	rjmp	.-52     	; 0xfc2 <__ftoa_engine+0xfc>
     ff6:	e8 94       	clt
     ff8:	01 50       	subi	r16, 0x01	; 1
     ffa:	30 f0       	brcs	.+12     	; 0x1008 <__ftoa_engine+0x142>
     ffc:	08 0f       	add	r16, r24
     ffe:	0a f4       	brpl	.+2      	; 0x1002 <__ftoa_engine+0x13c>
    1000:	00 27       	eor	r16, r16
    1002:	02 17       	cp	r16, r18
    1004:	08 f4       	brcc	.+2      	; 0x1008 <__ftoa_engine+0x142>
    1006:	20 2f       	mov	r18, r16
    1008:	23 95       	inc	r18
    100a:	02 2f       	mov	r16, r18
    100c:	7a 33       	cpi	r23, 0x3A	; 58
    100e:	28 f0       	brcs	.+10     	; 0x101a <__ftoa_engine+0x154>
    1010:	79 e3       	ldi	r23, 0x39	; 57
    1012:	7d 93       	st	X+, r23
    1014:	2a 95       	dec	r18
    1016:	e9 f7       	brne	.-6      	; 0x1012 <__ftoa_engine+0x14c>
    1018:	10 c0       	rjmp	.+32     	; 0x103a <__ftoa_engine+0x174>
    101a:	7d 93       	st	X+, r23
    101c:	2a 95       	dec	r18
    101e:	89 f6       	brne	.-94     	; 0xfc2 <__ftoa_engine+0xfc>
    1020:	06 94       	lsr	r0
    1022:	97 95       	ror	r25
    1024:	67 95       	ror	r22
    1026:	37 95       	ror	r19
    1028:	17 95       	ror	r17
    102a:	17 94       	ror	r1
    102c:	e1 18       	sub	r14, r1
    102e:	f1 0a       	sbc	r15, r17
    1030:	43 0b       	sbc	r20, r19
    1032:	56 0b       	sbc	r21, r22
    1034:	c9 0b       	sbc	r28, r25
    1036:	d0 09       	sbc	r29, r0
    1038:	98 f0       	brcs	.+38     	; 0x1060 <__ftoa_engine+0x19a>
    103a:	23 95       	inc	r18
    103c:	7e 91       	ld	r23, -X
    103e:	73 95       	inc	r23
    1040:	7a 33       	cpi	r23, 0x3A	; 58
    1042:	08 f0       	brcs	.+2      	; 0x1046 <__ftoa_engine+0x180>
    1044:	70 e3       	ldi	r23, 0x30	; 48
    1046:	7c 93       	st	X, r23
    1048:	20 13       	cpse	r18, r16
    104a:	b8 f7       	brcc	.-18     	; 0x103a <__ftoa_engine+0x174>
    104c:	7e 91       	ld	r23, -X
    104e:	70 61       	ori	r23, 0x10	; 16
    1050:	7d 93       	st	X+, r23
    1052:	30 f0       	brcs	.+12     	; 0x1060 <__ftoa_engine+0x19a>
    1054:	83 95       	inc	r24
    1056:	71 e3       	ldi	r23, 0x31	; 49
    1058:	7d 93       	st	X+, r23
    105a:	70 e3       	ldi	r23, 0x30	; 48
    105c:	2a 95       	dec	r18
    105e:	e1 f7       	brne	.-8      	; 0x1058 <__ftoa_engine+0x192>
    1060:	11 24       	eor	r1, r1
    1062:	ef 90       	pop	r14
    1064:	ff 90       	pop	r15
    1066:	0f 91       	pop	r16
    1068:	1f 91       	pop	r17
    106a:	cf 91       	pop	r28
    106c:	df 91       	pop	r29
    106e:	99 27       	eor	r25, r25
    1070:	87 fd       	sbrc	r24, 7
    1072:	90 95       	com	r25
    1074:	08 95       	ret

00001076 <strnlen_P>:
    1076:	fc 01       	movw	r30, r24
    1078:	05 90       	lpm	r0, Z+
    107a:	61 50       	subi	r22, 0x01	; 1
    107c:	70 40       	sbci	r23, 0x00	; 0
    107e:	01 10       	cpse	r0, r1
    1080:	d8 f7       	brcc	.-10     	; 0x1078 <strnlen_P+0x2>
    1082:	80 95       	com	r24
    1084:	90 95       	com	r25
    1086:	8e 0f       	add	r24, r30
    1088:	9f 1f       	adc	r25, r31
    108a:	08 95       	ret

0000108c <strnlen>:
    108c:	fc 01       	movw	r30, r24
    108e:	61 50       	subi	r22, 0x01	; 1
    1090:	70 40       	sbci	r23, 0x00	; 0
    1092:	01 90       	ld	r0, Z+
    1094:	01 10       	cpse	r0, r1
    1096:	d8 f7       	brcc	.-10     	; 0x108e <strnlen+0x2>
    1098:	80 95       	com	r24
    109a:	90 95       	com	r25
    109c:	8e 0f       	add	r24, r30
    109e:	9f 1f       	adc	r25, r31
    10a0:	08 95       	ret

000010a2 <fputc>:
    10a2:	0f 93       	push	r16
    10a4:	1f 93       	push	r17
    10a6:	cf 93       	push	r28
    10a8:	df 93       	push	r29
    10aa:	fb 01       	movw	r30, r22
    10ac:	23 81       	ldd	r18, Z+3	; 0x03
    10ae:	21 fd       	sbrc	r18, 1
    10b0:	03 c0       	rjmp	.+6      	; 0x10b8 <fputc+0x16>
    10b2:	8f ef       	ldi	r24, 0xFF	; 255
    10b4:	9f ef       	ldi	r25, 0xFF	; 255
    10b6:	2c c0       	rjmp	.+88     	; 0x1110 <fputc+0x6e>
    10b8:	22 ff       	sbrs	r18, 2
    10ba:	16 c0       	rjmp	.+44     	; 0x10e8 <fputc+0x46>
    10bc:	46 81       	ldd	r20, Z+6	; 0x06
    10be:	57 81       	ldd	r21, Z+7	; 0x07
    10c0:	24 81       	ldd	r18, Z+4	; 0x04
    10c2:	35 81       	ldd	r19, Z+5	; 0x05
    10c4:	42 17       	cp	r20, r18
    10c6:	53 07       	cpc	r21, r19
    10c8:	44 f4       	brge	.+16     	; 0x10da <fputc+0x38>
    10ca:	a0 81       	ld	r26, Z
    10cc:	b1 81       	ldd	r27, Z+1	; 0x01
    10ce:	9d 01       	movw	r18, r26
    10d0:	2f 5f       	subi	r18, 0xFF	; 255
    10d2:	3f 4f       	sbci	r19, 0xFF	; 255
    10d4:	31 83       	std	Z+1, r19	; 0x01
    10d6:	20 83       	st	Z, r18
    10d8:	8c 93       	st	X, r24
    10da:	26 81       	ldd	r18, Z+6	; 0x06
    10dc:	37 81       	ldd	r19, Z+7	; 0x07
    10de:	2f 5f       	subi	r18, 0xFF	; 255
    10e0:	3f 4f       	sbci	r19, 0xFF	; 255
    10e2:	37 83       	std	Z+7, r19	; 0x07
    10e4:	26 83       	std	Z+6, r18	; 0x06
    10e6:	14 c0       	rjmp	.+40     	; 0x1110 <fputc+0x6e>
    10e8:	8b 01       	movw	r16, r22
    10ea:	ec 01       	movw	r28, r24
    10ec:	fb 01       	movw	r30, r22
    10ee:	00 84       	ldd	r0, Z+8	; 0x08
    10f0:	f1 85       	ldd	r31, Z+9	; 0x09
    10f2:	e0 2d       	mov	r30, r0
    10f4:	09 95       	icall
    10f6:	89 2b       	or	r24, r25
    10f8:	e1 f6       	brne	.-72     	; 0x10b2 <fputc+0x10>
    10fa:	d8 01       	movw	r26, r16
    10fc:	16 96       	adiw	r26, 0x06	; 6
    10fe:	8d 91       	ld	r24, X+
    1100:	9c 91       	ld	r25, X
    1102:	17 97       	sbiw	r26, 0x07	; 7
    1104:	01 96       	adiw	r24, 0x01	; 1
    1106:	17 96       	adiw	r26, 0x07	; 7
    1108:	9c 93       	st	X, r25
    110a:	8e 93       	st	-X, r24
    110c:	16 97       	sbiw	r26, 0x06	; 6
    110e:	ce 01       	movw	r24, r28
    1110:	df 91       	pop	r29
    1112:	cf 91       	pop	r28
    1114:	1f 91       	pop	r17
    1116:	0f 91       	pop	r16
    1118:	08 95       	ret

0000111a <__ultoa_invert>:
    111a:	fa 01       	movw	r30, r20
    111c:	aa 27       	eor	r26, r26
    111e:	28 30       	cpi	r18, 0x08	; 8
    1120:	51 f1       	breq	.+84     	; 0x1176 <__ultoa_invert+0x5c>
    1122:	20 31       	cpi	r18, 0x10	; 16
    1124:	81 f1       	breq	.+96     	; 0x1186 <__ultoa_invert+0x6c>
    1126:	e8 94       	clt
    1128:	6f 93       	push	r22
    112a:	6e 7f       	andi	r22, 0xFE	; 254
    112c:	6e 5f       	subi	r22, 0xFE	; 254
    112e:	7f 4f       	sbci	r23, 0xFF	; 255
    1130:	8f 4f       	sbci	r24, 0xFF	; 255
    1132:	9f 4f       	sbci	r25, 0xFF	; 255
    1134:	af 4f       	sbci	r26, 0xFF	; 255
    1136:	b1 e0       	ldi	r27, 0x01	; 1
    1138:	3e d0       	rcall	.+124    	; 0x11b6 <__ultoa_invert+0x9c>
    113a:	b4 e0       	ldi	r27, 0x04	; 4
    113c:	3c d0       	rcall	.+120    	; 0x11b6 <__ultoa_invert+0x9c>
    113e:	67 0f       	add	r22, r23
    1140:	78 1f       	adc	r23, r24
    1142:	89 1f       	adc	r24, r25
    1144:	9a 1f       	adc	r25, r26
    1146:	a1 1d       	adc	r26, r1
    1148:	68 0f       	add	r22, r24
    114a:	79 1f       	adc	r23, r25
    114c:	8a 1f       	adc	r24, r26
    114e:	91 1d       	adc	r25, r1
    1150:	a1 1d       	adc	r26, r1
    1152:	6a 0f       	add	r22, r26
    1154:	71 1d       	adc	r23, r1
    1156:	81 1d       	adc	r24, r1
    1158:	91 1d       	adc	r25, r1
    115a:	a1 1d       	adc	r26, r1
    115c:	20 d0       	rcall	.+64     	; 0x119e <__ultoa_invert+0x84>
    115e:	09 f4       	brne	.+2      	; 0x1162 <__ultoa_invert+0x48>
    1160:	68 94       	set
    1162:	3f 91       	pop	r19
    1164:	2a e0       	ldi	r18, 0x0A	; 10
    1166:	26 9f       	mul	r18, r22
    1168:	11 24       	eor	r1, r1
    116a:	30 19       	sub	r19, r0
    116c:	30 5d       	subi	r19, 0xD0	; 208
    116e:	31 93       	st	Z+, r19
    1170:	de f6       	brtc	.-74     	; 0x1128 <__ultoa_invert+0xe>
    1172:	cf 01       	movw	r24, r30
    1174:	08 95       	ret
    1176:	46 2f       	mov	r20, r22
    1178:	47 70       	andi	r20, 0x07	; 7
    117a:	40 5d       	subi	r20, 0xD0	; 208
    117c:	41 93       	st	Z+, r20
    117e:	b3 e0       	ldi	r27, 0x03	; 3
    1180:	0f d0       	rcall	.+30     	; 0x11a0 <__ultoa_invert+0x86>
    1182:	c9 f7       	brne	.-14     	; 0x1176 <__ultoa_invert+0x5c>
    1184:	f6 cf       	rjmp	.-20     	; 0x1172 <__ultoa_invert+0x58>
    1186:	46 2f       	mov	r20, r22
    1188:	4f 70       	andi	r20, 0x0F	; 15
    118a:	40 5d       	subi	r20, 0xD0	; 208
    118c:	4a 33       	cpi	r20, 0x3A	; 58
    118e:	18 f0       	brcs	.+6      	; 0x1196 <__ultoa_invert+0x7c>
    1190:	49 5d       	subi	r20, 0xD9	; 217
    1192:	31 fd       	sbrc	r19, 1
    1194:	40 52       	subi	r20, 0x20	; 32
    1196:	41 93       	st	Z+, r20
    1198:	02 d0       	rcall	.+4      	; 0x119e <__ultoa_invert+0x84>
    119a:	a9 f7       	brne	.-22     	; 0x1186 <__ultoa_invert+0x6c>
    119c:	ea cf       	rjmp	.-44     	; 0x1172 <__ultoa_invert+0x58>
    119e:	b4 e0       	ldi	r27, 0x04	; 4
    11a0:	a6 95       	lsr	r26
    11a2:	97 95       	ror	r25
    11a4:	87 95       	ror	r24
    11a6:	77 95       	ror	r23
    11a8:	67 95       	ror	r22
    11aa:	ba 95       	dec	r27
    11ac:	c9 f7       	brne	.-14     	; 0x11a0 <__ultoa_invert+0x86>
    11ae:	00 97       	sbiw	r24, 0x00	; 0
    11b0:	61 05       	cpc	r22, r1
    11b2:	71 05       	cpc	r23, r1
    11b4:	08 95       	ret
    11b6:	9b 01       	movw	r18, r22
    11b8:	ac 01       	movw	r20, r24
    11ba:	0a 2e       	mov	r0, r26
    11bc:	06 94       	lsr	r0
    11be:	57 95       	ror	r21
    11c0:	47 95       	ror	r20
    11c2:	37 95       	ror	r19
    11c4:	27 95       	ror	r18
    11c6:	ba 95       	dec	r27
    11c8:	c9 f7       	brne	.-14     	; 0x11bc <__ultoa_invert+0xa2>
    11ca:	62 0f       	add	r22, r18
    11cc:	73 1f       	adc	r23, r19
    11ce:	84 1f       	adc	r24, r20
    11d0:	95 1f       	adc	r25, r21
    11d2:	a0 1d       	adc	r26, r0
    11d4:	08 95       	ret

000011d6 <_exit>:
    11d6:	f8 94       	cli

000011d8 <__stop_program>:
    11d8:	ff cf       	rjmp	.-2      	; 0x11d8 <__stop_program>
